{"version":3,"sources":["assets/img/profilePic.jpg","components/Deck/ProcessedViewer/Sample1.pdf","components/Navbar/Navbar.js","components/Sidebar/Sidebar.js","components/Deck/InvoicesProcessedCard/InvoicesProcessedCard.js","components/Deck/UploadCard/UploadCard.js","components/Deck/DownloadCard/DownloadCard.js","components/Deck/Uploader/Uploader.js","components/Deck/ProcessedTable/Loader/Loader.js","components/Deck/ProcessedTable/ProcessedTable.js","components/Deck/ProcessedViewer/PDFViewer/PDFViewer.js","components/Deck/ProcessedViewer/ProcessedViewer.js","components/Deck/Query/Query.js","components/Deck/FormSubmit/FormNav.js","components/Deck/FormSubmit/BasicDetails.js","components/Deck/FormSubmit/PaperDetails.js","components/Deck/FormSubmit/Uploads.js","components/Deck/Chatbot/ChatbotTable.js","components/Deck/Chatbot/InvoiceViewer/InvoiceViewer.js","components/Deck/Deck.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","Navbar","className","style","fontWeight","src","profilePic","React","Component","Sidebar","exact","to","activeClassName","class","aria-hidden","InvoicesProcessedCard","this","props","invoicesProcessed","UploadCard","connect","state","onClick","toggleUploader","undefined","dispatch","toggle","type","DownloadCard","updatePercent","metadata","msg","percent","toFixed","currentFile","console","log","percentage","setTimeout","setState","downlaoding","Math","floor","downloadZip","zip","JSZip","files","length","map","file","filename","Date","getTime","toString","download","split","urlToPromise","binary","generateAsync","then","blob","saveAs","alert","url","Promise","resolve","reject","JSZipUtils","getBinaryContent","err","data","downloadJSX","value","text","styles","buildStyles","trailColor","backgroundColor","textColor","pathColor","Uploader","getUploadParams","handleChangeStatus","f","status","meta","uploadFile","fileType","deleteFile","submitFile","a","filesData","FormData","append","formDetails","paperTitle","axios","method","headers","result","handleSubmit","allFiles","name","newFiles","id","addFiles","forEach","remove","onChangeStatus","dropzone","width","height","borderRadius","submitButton","display","inputContent","Loader","handleClick","showPreview","justifyContent","href","Styles","styled","div","Table","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","headerGroup","getHeaderGroupProps","column","row","i","getRowProps","cells","cell","getCellProps","render","uploadedFiles","useMemo","Header","accessor","Cell","sno","title","date","PDFViewer","workerUrl","fileUrl","ProcessedViewer","backgroundImage","preview","closePreview","color","Query","columnDefs","headerName","field","sortable","filter","cellRenderer","params","rowData","allUploadsProcessed","author","proposal","comments","endorsments","refs","agGrid","api","sizeColumnsToFit","ref","userID","FormNav","BasicDetails","renderValue","TextField","label","variant","placeholder","userName","InputProps","readOnly","userEmail","FormControl","InputLabel","Select","labelId","fundingCall","selected","onChange","selectFundingCall","options","option","index","MenuItem","includes","others","changeOthers","editDetails","e","obj","target","selectedIndex","PaperDetails","paperAuthors","designation","department","institute","coInvestigators","key","coInvestDetailsChange","addCoInvest","deleteCoInvest","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","margin","lastDate","KeyboardButtonProps","coInvestNameChange","coInvestAffliationChange","affliation","Uploads","allFilesProposal","filePipeline","allFilesComments","allFilesEndor","fontSize","reviewerOneName","reviewerNameChange","reviewerTwoName","email","number","support","setSupport","supportArray","displaySupport","useEffect","post","temp","replyClick","Swal","fire","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","message","catch","error","showValidationMessage","allowOutsideClick","isLoading","cursor","textDecoration","original","phoneNumber","toLocaleDateString","fraud","InvoiceViewer","hideSupport","supportDisplay","Deck","path","uploaderOpen","previewShow","show","App","Boolean","window","location","hostname","match","currCo","currArr","initState","fullName","edorsements","rootReducer","produce","draft","action","fileID","fileData","link","processedDetails","arr","push","slice","splice","store","createStore","composeWithDevTools","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,wC,saCA3CD,EAAOC,QAAU,IAA0B,qC,uNCe5BC,E,uKATP,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,SAAhB,OAA4B,0BAAMC,MAAO,CAAEC,WAAY,QAA3B,UAC5B,yBAAKC,IAAKC,IAAYJ,UAAU,oB,GAL3BK,IAAMC,W,QCeZC,G,8KAbP,OACI,yBAAKP,UAAU,WACX,wBAAIA,UAAU,YACV,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAASQ,OAAK,EAACC,GAAG,IAAIC,gBAAgB,UAAS,uBAAGC,MAAM,kBAAkBC,cAAY,SAAtF,cACzB,wBAAIZ,UAAU,YAAW,kBAAC,IAAD,CAASS,GAAG,QAAQC,gBAAgB,UAAS,uBAAGC,MAAM,eAAeC,cAAY,SAAjF,mBACzB,wBAAIZ,UAAU,YAAW,kBAAC,IAAD,CAASS,GAAG,SAASC,gBAAgB,UAAS,uBAAGC,MAAM,eAAeC,cAAY,SAAlF,gB,GAPvBP,IAAMC,Y,wBCAtBO,E,uKAEE,OACI,yBAAKb,UAAU,yBACX,0BAAMA,UAAU,UAAUc,KAAKC,MAAMC,mBACrC,0BAAMhB,UAAU,QAAhB,WAA+B,6BAA/B,kB,GALoBK,IAAMC,WCApCW,GDiBSC,aANS,SAACC,GACrB,MAAO,CACHH,kBAAmBG,EAAMH,qBAIlBE,CAAyBL,G,8KChB1B,IAAD,OACL,OACI,yBAAKO,QAAS,WAAQ,EAAKL,MAAMM,gBAAe,IAASrB,UAAU,cAC/D,uBAAGA,UAAU,qBAAqBY,cAAY,SAC9C,0BAAMZ,UAAU,QAAhB,SAA6B,6BAA7B,c,GALSK,IAAMC,Y,GAsBhBY,iBAAQI,GAXI,SAACC,GACxB,MAAO,CACHF,eAAgB,SAACG,GACbD,EAAS,CACLE,KAAM,kBACND,OAAQA,QAMTN,CAAuCD,G,2DCjBhDS,G,yDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAmBVY,cAAgB,SAACC,GACb,IAAIC,EAAM,iBAAmBD,EAASE,QAAQC,QAAQ,GAAK,KACvDH,EAASI,cACTH,GAAO,oBAAsBD,EAASI,aAI1CC,QAAQC,IAAIL,GACZI,QAAQC,IAAuB,EAAnBN,EAASE,SACQ,KAAzB,EAAKX,MAAMgB,YACXC,YAAW,WACP,EAAKC,SAAS,CACVC,aAAa,EACbH,WAAY,MAEjB,KAEP,EAAKE,SAAS,CACVC,aAAa,EACbH,WAAYI,KAAKC,MAAMZ,EAASE,YAvCrB,EA2CnBW,YAAc,WACV,IAAIC,EAAM,IAAIC,IACdV,QAAQC,IAAI,aACmB,GAA3B,EAAKnB,MAAM6B,MAAMC,QAIrB,EAAK9B,MAAM6B,MAAME,KAAI,SAACC,GAClBd,QAAQC,IAAI,QACZQ,EAAIK,KAAKA,EAAKC,SAAW,KAAM,IAAIC,MAAOC,UAAUC,WAAa,IAAMJ,EAAKK,SAASC,MAAM,KACvFN,EAAKK,SAASC,MAAM,KAAKR,OAAS,GAClC,EAAKS,aACDP,EAAKK,UACN,CACHG,QAAQ,OAGhBb,EAAIc,cAAc,CACd/B,KAAM,QACP,EAAKE,eACH8B,MAAK,SAAkBC,GAGpBC,iBAAOD,EAAM,oBAnBjBE,MAAM,uBA7CV,EAAKzC,MAAQ,CACTmB,aAAa,EACbH,WAAY,GAJD,E,yDAQN0B,GACT,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCC,IAAWC,iBAAiBL,GAAK,SAAUM,EAAKC,GACxCD,EACAH,EAAOG,GAEPJ,EAAQK,W,+BAwDpB,IAAIC,EAeJ,OAbIA,EAD0B,GAA1BvD,KAAKK,MAAMmB,YACG,uBAAGtC,UAAU,uBAAuBY,cAAY,SAEhD,kBAAC,IAAD,CACV0D,MAAOxD,KAAKK,MAAMgB,WAClBoC,KAAI,UAAKzD,KAAKK,MAAMgB,WAAhB,KACJnC,UAAU,iBACVwE,OAAQC,YAAY,CAChBC,WAAY,UACZC,gBAAiB,UACjBC,UAAW,UACXC,UAAW,cAInB,yBAAKzD,QAASN,KAAK2B,YAAazC,UAAU,gBACrCqE,EACD,0BAAMrE,UAAU,QAAhB,WAA+B,6BAA/B,kB,GAzFWK,IAAMC,Y,GAqGlBY,aANS,SAACC,GACrB,MAAO,CACHyB,MAAOzB,EAAMyB,SAIN1B,CAAyBQ,G,4FCvGlCoD,E,4MACFC,gBAAkB,WACd,MAAO,CAAElB,IAAK,6B,EAGlBmB,mBAAqB,SAACC,EAAGC,GACrBjD,QAAQC,IAAIgD,EAAQD,EAAGA,EAAEE,MACX,QAAVD,EACA,EAAKnE,MAAMqE,WAAW,EAAKrE,MAAMsE,SAAjC,eAAgDJ,IAC/B,WAAVC,GACP,EAAKnE,MAAMuE,WAAW,EAAKvE,MAAMsE,SAAjC,eAAgDJ,K,EAIxDM,W,uCAAa,WAAO3C,GAAP,iBAAA4C,EAAA,6DACHC,EAAY,IAAIC,UACZC,OAAO,QAAS,EAAK5E,MAAM6E,YAAYC,YACjDjD,EAAME,KAAI,SAACC,GACP0C,EAAUE,OAAO,OAAQ5C,MAJpB,SAMU+C,IAAM,CACrBC,OAAQ,OACRlC,IAAK,yCACLO,KAAMqB,EACNO,QAAS,CACL,eAAgB,yBAXf,cAMLC,EANK,OAcThE,QAAQC,IAAI+D,EAAO7B,MAdV,kBAeF6B,EAAO7B,MAfL,2C,wDAkBb8B,a,uCAAe,WAAOtD,EAAOuD,GAAd,mBAAAX,EAAA,6DACXvD,QAAQC,IAAIU,EAAME,KAAI,SAAAmC,GAAC,OAAIA,EAAEE,KAAKiB,SAC9BC,EAAWzD,EAAME,KAAI,SAACC,GACtB,OAAOA,EAAKA,QAHL,SAKQ,EAAKwC,WAAWc,GALxB,OAKPJ,EALO,OAMPpC,EAAM,yCAA2CoC,EAAOK,GAAK,KACjE,EAAKvF,MAAMwF,SAAS1C,GACpBsC,EAASK,SAAQ,SAAAvB,GAAC,OAAIA,EAAEwB,YARb,2C,+GAWL,IAAD,EACL,OACI,kBAAC,IAAD,CACIC,eAAgB5F,KAAKkE,mBACrBR,OAAQ,CACJmC,UAAQ,GACJC,MAAO,MACPC,OAAQ,MACRC,aAAc,KAEdnC,gBAAiB,SALb,6BAMU,MANV,uBAOI,GAPJ,0BAQO,MARP,GAURoC,aAAc,CACVC,QAAS,SAGjBC,aAAa,iC,GA9DN5G,IAAMC,WAmGdY,eA/BS,SAACC,GACrB,MAAO,CACHyE,YAAazE,EAAMyE,gBAIA,SAACrE,GACxB,MAAO,CACHgF,SAAU,SAAC1C,GACPtC,EAAS,CACLE,KAAM,YACNoC,IAAKA,KAGbuB,WAAY,SAACC,EAAUtC,GACnBxB,EAAS,CACLE,KAAM,cACN4D,SAAUA,EACVtC,KAAMA,KAGduC,WAAY,SAACD,EAAUtC,GACnBxB,EAAS,CACLE,KAAM,cACN4D,SAAUA,EACVtC,KAAMA,QAMP7B,CAA6C4D,G,wBCtGtDoC,G,gEACF,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IAGVoG,YAAc,WACV,EAAKpG,MAAMqG,YAAY,EAAKrG,MAAMuD,QALnB,E,qDAoBf,OAXwB,GAApBxD,KAAKC,MAAMuD,MACC,yBAAKrE,MAAO,CAAE2G,MAAO,OAAQI,QAAS,OAAQK,eAAgB,WACtE,yBAAK1G,MAAM,YAEY,KAApBG,KAAKC,MAAMuD,MACN,IAEA,6BACR,uBAAGgD,KAAK,IAAIlG,QAASN,KAAKqG,aAA1B,e,GAlBK9G,IAAMC,YAsCZY,mBAAQI,GAXI,SAACC,GACxB,MAAO,CACH6F,YAAa,SAACvD,GACVtC,EAAS,CACLE,KAAM,eACNoC,IAAKA,QAMN3C,CAAuCgG,G,icClCtD,IAAMK,EAASC,IAAOC,IAAV,IACR,GAGE,GAgBE,IASR,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASvD,EAAQ,EAARA,KAAQ,EAMXwD,mBACX,CACID,UACAvD,QAEJyD,aATJC,EAF0B,EAE1BA,cACAC,EAH0B,EAG1BA,kBACAC,EAJ0B,EAI1BA,aACAC,EAL0B,EAK1BA,KACAC,EAN0B,EAM1BA,WAUEC,EAAgBF,EAEtB,OACI,oCACI,0BAAWH,IACP,+BACKE,EAAalF,KAAI,SAAAsF,GAAW,OACzB,uBAAQA,EAAYC,sBACfD,EAAYpC,QAAQlD,KAAI,SAAAwF,YAkBrC,0BAAWP,IACNI,EAAcrF,KACX,SAACyF,EAAKC,GAEF,OADAN,EAAWK,GAEP,uBAAQA,EAAIE,cACPF,EAAIG,MAAM5F,KAAI,SAAA6F,GACX,OACI,uBAAQA,EAAKC,eAAiBD,EAAKE,OAAO,kBAS1E,8BAgDZ,IAOe3H,eAPS,SAACC,GACrB,MAAO,CACHyB,MAAOzB,EAAM2H,cACbjG,OAAQ1B,EAAM2H,cAAcjG,UAIrB3B,EAlDf,SAAwBH,GACpB,IAAM4G,EAAUtH,IAAM0I,SAClB,iBAAM,CACF,CACIC,OAAQ,mBACRrB,QAAS,CACL,CACIqB,OAAQ,QACRC,SAAU,OAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,OACRC,SAAU,MACVC,KAAM,SAAAnI,GAAK,OAAI,kBAAC,EAAWA,KAE/B,CACIiI,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,OACRC,SAAU,aAK1B,IAGJ,OACI,kBAAC1B,EAAD,KACI,kBAACG,EAAD,CAAOC,QAASA,EAASvD,KACC,GAAtBrD,EAAM6B,MAAMC,OACR,CAAC,CAAEsG,IAAK,IAAKjE,OAAQ,IAAKkE,MAAO,IAAKvF,IAAK,IAAKwF,KAAM,MACtDtI,EAAM6B,Y,0BCvHX0G,G,yDAZX,WAAYvI,GAAQ,uCACVA,G,qDAGN,OACI,kBAAC,SAAD,CAAQwI,UAAU,gEACd,kBAAC,IAAD,CAAQC,QAAS1I,KAAKC,MAAM8C,W,GAPpBxD,IAAMC,YCDxBmJ,G,yDACF,WAAY1I,GAAQ,uCACVA,G,qDAIN,OACI,6BACI,yBAAKf,UAAU,YACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UAAUC,MAAO,CAAEyJ,gBAAgB,OAAD,OAAS5I,KAAKC,MAAM4I,QAAQ9F,IAA5B,OAC7C,kBAAC,EAAD,CAAWA,IAAK/C,KAAKC,MAAM4I,QAAQ9F,OAEvC,yBAAK7D,UAAU,6BAA6BoB,QAASN,KAAKC,MAAM6I,cAC5D,uBAAGjJ,MAAM,6CACT,uBAAGA,MAAM,0BAA0BV,MAAO,CAAE4J,MAAO,kB,GAf7CxJ,IAAMC,YAuCrBY,eAhBS,SAACC,GACrB,MAAO,CACHwI,QAASxI,EAAMwI,YAII,SAACpI,GACxB,MAAO,CACHqI,aAAc,WACVrI,EAAS,CACLE,KAAM,sBAMPP,CAA6CuI,G,0BCrCtDK,G,gEACF,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACT4I,WAAY,CAAC,CACTC,WAAY,oBAAqBC,MAAO,SAAUC,UAAU,EAAMC,QAAQ,GAC3E,CACCH,WAAY,WAAYC,MAAO,WAC/BG,aAAc,SAAUC,GACpB,MAAO,mBAAYA,EAAO/F,MAAnB,mCAEZ,CACC0F,WAAY,WAAYC,MAAO,WAC/BG,aAAc,SAAUC,GACpB,MAAO,mBAAYA,EAAO/F,MAAnB,mCAEZ,CACC0F,WAAY,eAAgBC,MAAO,cACnCG,aAAc,SAAUC,GACpB,MAAO,mBAAYA,EAAO/F,MAAnB,mCAEZ,CACC0F,WAAY,SAAUC,MAAO,SAAUC,UAAU,EAAMC,QAAQ,IAEnEG,QAAS,IAvBE,E,gLAkCXC,EAAsB,CACtB,CACIC,OAAQ,IACRC,SAAU,iBACVC,SAAU,iBACVC,YAAa,iBACbzF,OAAQ,WAEZ,CACIsF,OAAQ,IACRC,SAAU,iBACVC,SAAU,iBACVC,YAAa,iBACbzF,OAAQ,WAEZ,CACIsF,OAAQ,IACRC,SAAU,iBACVC,SAAU,iBACVC,YAAa,iBACbzF,OAAQ,WAEZ,CACIsF,OAAQ,IACRC,SAAU,iBACVC,SAAU,iBACVC,YAAa,iBACbzF,OAAQ,YAGhBpE,KAAKuB,SAAS,CACViI,QAASC,IAEbzJ,KAAK8J,KAAKC,OAAOC,IAAIC,mB,qIAGrB,OACI,yBACI/K,UAAU,kBACVC,MAAO,CACH4G,OAAQ,MACRD,MAAO,SAGX,kBAAC,cAAD,CACIoE,IAAI,SACJjB,WAAYjJ,KAAKK,MAAM4I,WACvBO,QAASxJ,KAAKK,MAAMmJ,e,GAlFpBjK,IAAMC,YA+FXY,gBANS,SAACC,GACrB,MAAO,CACH8J,OAAQ9J,EAAM8J,UAIP/J,CAAyB4I,G,0DCxEzBoB,G,kDA3BX,WAAYnK,GAAQ,uCACVA,G,qDAIN,OACI,yBAAKf,UAAU,UACX,0BAAMA,UAAU,WAAhB,eACA,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAASQ,OAAK,EAACC,GAAG,SAAST,UAAU,YAAYU,gBAAgB,UAAjE,iBAGA,kBAAC,IAAD,CAASF,OAAK,EAACC,GAAG,sBAAsBT,UAAU,YAAYU,gBAAgB,UAA9E,UAGA,kBAAC,IAAD,CAASF,OAAK,EAACC,GAAG,gBAAgBT,UAAU,YAAYU,gBAAgB,UAAxE,iB,GAhBEL,IAAMC,WCQtB6K,G,kDACF,WAAYpK,GAAQ,IAAD,8BACf,cAAMA,IAGVqK,YAAc,SAAC9G,GACX,OAAOA,GALQ,E,qDAQT,IAAD,OACL,OACI,yBAAKtE,UAAU,eACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,kBAACqL,GAAA,EAAD,aACI/E,GAAG,yBACHgF,MAAM,YACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,YACZlH,MAAOxD,KAAKC,MAAM0K,SAClBC,WAAY,CACRC,UAAU,IARlB,UAUY,WAEZ,kBAACN,GAAA,EAAD,aACI/E,GAAG,yBACHgF,MAAM,QACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,QACZlH,MAAOxD,KAAKC,MAAM6K,UAClBF,WAAY,CACRC,UAAU,IARlB,UAUY,WAUZ,kBAACE,GAAA,EAAD,CAAa7L,UAAU,eACnB,kBAAC8L,GAAA,EAAD,CAAYxF,GAAG,4BAAf,4BACA,kBAACyF,GAAA,EAAD,CACIC,QAAQ,2BACR1F,GAAG,qBACHtG,UAAU,eACVsE,MAAOxD,KAAKC,MAAMkL,YAAYC,SAC9Bd,YAAa,kBAAM,EAAKA,YAAY,EAAKrK,MAAMkL,YAAYC,WAC3DC,SAAUrL,KAAKC,MAAMqL,mBAEpBtL,KAAKC,MAAMkL,YAAYI,QAAQvJ,KAC5B,SAACwJ,EAAQC,GAAT,OAAmB,kBAACC,GAAA,EAAD,CAAUlI,MAAOiI,GAAQD,QAIvDxL,KAAKC,MAAMkL,YAAYC,SAASO,SAAS,UAAY,kBAACpB,GAAA,EAAD,CAClD/E,GAAG,yBACHgF,MAAM,iBACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,QACZlH,MAAOxD,KAAKC,MAAMkL,YAAYS,OAC9BP,SAAUrL,KAAKC,MAAM4L,gBAG7B,yBAAK3M,UAAU,WACX,kBAAC,IAAD,CAASQ,OAAK,EAACC,GAAG,sBAAsBT,UAAU,cAAlD,e,GAzEGK,IAAMC,WAmHlBY,gBAhCS,SAACC,GACrB,MAAO,CACHsK,SAAUtK,EAAMsK,SAChBG,UAAWzK,EAAMyK,UACjBhG,YAAazE,EAAMyE,YACnBqG,YAAa9K,EAAM8K,gBAIA,SAAC1K,GACxB,MAAO,CACHqL,YAAa,SAAC3C,EAAO4C,GACjB,IAAIC,EAAM,CACVA,KAAW,uBACXA,EAAI7C,GAAS4C,EAAEE,OAAOzI,MACtB/C,EAASuL,IAEbV,kBAAmB,SAACS,GAChBtL,EAAS,CACLE,KAAM,sBACNuL,cAAeH,EAAEE,OAAOzI,SAGhCqI,aAAc,SAACE,GACXtL,EAAS,CACLE,KAAM,sBACNiL,OAAQG,EAAEE,OAAOzI,YAMlBpD,CAA6CiK,I,uCC7GtD8B,G,kDACF,WAAYlM,GAAQ,uCACVA,G,qDAGA,IAAD,OACL,OACI,yBAAKf,UAAU,eACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,kBAACqL,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,oBACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,QACZlH,MAAOxD,KAAKC,MAAM6E,YAAYC,WAC9BsG,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,aAAcC,MAE5D,kBAACxB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,iCACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,yBACZlH,MAAOxD,KAAKC,MAAM6E,YAAYsH,aAC9Bf,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,eAAgBC,MAE9D,kBAACxB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,cACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,cACZlH,MAAOxD,KAAKC,MAAM6E,YAAYuH,YAC9BhB,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,cAAeC,MAE7D,kBAACxB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,aACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,aACZlH,MAAOxD,KAAKC,MAAM6E,YAAYwH,WAC9BjB,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,aAAcC,MAE5D,kBAACxB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,YACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,YACZlH,MAAOxD,KAAKC,MAAM6E,YAAYyH,UAC9BlB,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,YAAaC,MAE3D,0BAAM7M,UAAU,QAAhB,+BACCc,KAAKC,MAAMuM,gBAAgBxK,KAAI,SAACyF,EAAKgE,GAClC,OACI,yBAAKgB,IAAKhB,EAAOvM,UAAU,sBACvB,kBAACqL,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,OACNC,QAAQ,WACRvL,UAAU,aACVwL,YAAY,OACZlH,MAAOiE,EAAInC,KACX+F,SAAU,SAACU,GAAQ,EAAK9L,MAAMyM,sBAAsBX,EAAGN,EAAO,WAElE,kBAAClB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,cACNC,QAAQ,WACRvL,UAAU,aACVwL,YAAY,cACZlH,MAAOiE,EAAI4E,YACXhB,SAAU,SAACU,GAAQ,EAAK9L,MAAMyM,sBAAsBX,EAAGN,EAAO,kBAElE,kBAAClB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,aACNC,QAAQ,WACRvL,UAAU,aACVwL,YAAY,aACZlH,MAAOiE,EAAI6E,WACXjB,SAAU,SAACU,GAAQ,EAAK9L,MAAMyM,sBAAsBX,EAAGN,EAAO,iBAElE,kBAAClB,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,YACNC,QAAQ,WACRvL,UAAU,aACVwL,YAAY,YACZlH,MAAOiE,EAAI8E,UACXlB,SAAU,SAACU,GAAQ,EAAK9L,MAAMyM,sBAAsBX,EAAGN,EAAO,gBAElE,6BACI,uBAAGnL,QAAS,WAAQ,EAAKL,MAAM0M,YAAYlB,IAAUvM,UAAU,mBAAmBY,cAAY,SAC9F,uBAAGQ,QAAS,WAAQ,EAAKL,MAAM2M,eAAenB,IAAUvM,UAAU,oBAAoBY,cAAY,cAKlH,kBAAC,KAAD,CAAyB+M,MAAOC,MAC5B,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,cACpB,kBAAC,KAAD,CACIC,gBAAc,EACdzC,QAAQ,SACR0C,OAAO,aACPC,OAAO,SACPlO,UAAU,cACVsG,GAAG,qBACHgF,MAAM,iDACNhH,MAAOxD,KAAKC,MAAM6E,YAAYuI,SAC9BhC,SAAU,SAACU,GAAQ,EAAK9L,MAAM6L,YAAY,WAAYC,IACtDuB,oBAAqB,CACjB,aAAc,oBAelC,yBAAKpO,UAAU,WACX,kBAAC,IAAD,CAASQ,OAAK,EAACC,GAAG,gBAAgBT,UAAU,cAA5C,e,GApIGK,IAAMC,WAsMlBY,gBAxDS,SAACC,GACrB,MAAO,CACHyE,YAAazE,EAAMyE,YACnB0H,gBAAiBnM,EAAMmM,oBAIJ,SAAC/L,GACxB,MAAO,CACHqL,YAAa,SAAC3C,EAAO4C,GACjB,IAAIC,EAAM,CACVA,KAAW,uBACE,YAAT7C,GACA6C,EAAI7C,GAAS4C,EACb5K,QAAQC,IAAI2K,IAEZC,EAAI7C,GAAS4C,EAAEE,OAAOzI,MAE1B/C,EAASuL,IAEbuB,mBAAoB,SAACxB,EAAGN,GACpBhL,EAAS,CACLE,KAAM,wBACN2E,KAAMyG,EAAEE,OAAOzI,MACfiI,MAAOA,KAGf+B,yBAA0B,SAACzB,EAAGN,GAC1BhL,EAAS,CACLE,KAAM,8BACN8M,WAAY1B,EAAEE,OAAOzI,MACrBiI,MAAOA,KAGfiB,sBAAuB,SAACX,EAAGN,EAAOgB,GAC9B,IAAIT,EAAM,CACVA,KAAW,4BACXA,EAAIS,GAAOV,EAAEE,OAAOzI,MACpBwI,EAAIP,MAAQA,EACZhL,EAASuL,IAEbW,YAAa,SAAClB,GACVhL,EAAS,CACLE,KAAM,gBACN8K,MAAOA,KAGfmB,eAAgB,SAACnB,GACbhL,EAAS,CACLE,KAAM,mBACN8K,MAAOA,QAMRrL,CAA6C+L,IC9MtDuB,G,kDACF,WAAYzN,GAAQ,IAAD,8BACf,cAAMA,IAGVwE,WAJmB,sBAIN,oCAAAC,EAAA,6DACHC,EAAY,IAAIC,UACZC,OAAO,QAAS,WAC1BF,EAAUE,OAAO,QAAS,EAAK5E,MAAM6E,YAAYC,YAC7C4I,EAAmB,EAAK1N,MAAM6E,YAAY8I,aAAajE,SAAS,GAAG1H,KACnE4L,EAAmB,EAAK5N,MAAM6E,YAAY8I,aAAajE,SAAS,GAAG1H,KACnE6L,EAAgB,EAAK7N,MAAM6E,YAAY8I,aAAajE,SAAS,GAAG1H,KAIpE0C,EAAUE,OAAO,WAAY8I,GAC7BhJ,EAAUE,OAAO,WAAYiJ,GAC7BnJ,EAAUE,OAAO,cAAegJ,GAChClJ,EAAUE,OAAO,aAAc,EAAK5E,MAAM6E,YAAYsH,cACtDzH,EAAUE,OAAO,UAAW,EAAK5E,MAAMkL,YAAYC,UAd1C,UAeUpG,IAAM,CACrBC,OAAQ,OACRlC,IAAK,6CACLO,KAAMqB,EACNO,QAAS,CACL,eAAgB,yBApBf,eAeLC,EAfK,OAuBThE,QAAQC,IAAI+D,EAAO7B,MAvBV,kBAwBF6B,EAAO7B,MAxBL,4CAJM,EA+BnB8B,aA/BmB,sBA+BJ,8BAAAV,EAAA,sEAOQ,EAAKD,aAPb,OAOPU,EAPO,OAQXhE,QAAQC,IAAI+D,GACRpC,EAAM,uCAAyCoC,EAAOK,GAAK,KAC/D,EAAKvF,MAAMwF,SAAS1C,GAVT,2CA/BI,E,qDA6CT,IAAD,OACL,OACI,yBAAK7D,UAAU,eACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,0BAAMC,MAAO,CAAE4O,SAAU,UAAY7O,UAAU,QAA/C,0CACA,kBAAC,EAAD,CAAUqF,SAAS,aACnB,kBAACgG,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,qBACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,qBACZlH,MAAOxD,KAAKC,MAAM6E,YAAYkJ,gBAC9B3C,SAAU,SAACU,GAAQ,EAAK9L,MAAMgO,mBAAmB,EAAGlC,MAExD,0BAAM5M,MAAO,CAAE4O,SAAU,UAAY7O,UAAU,QAA/C,uBACA,kBAAC,EAAD,CAAUqF,SAAS,aACnB,kBAACgG,GAAA,EAAD,CACI/E,GAAG,iBACHgF,MAAM,qBACNC,QAAQ,WACRvL,UAAU,cACVwL,YAAY,qBACZlH,MAAOxD,KAAKC,MAAM6E,YAAYoJ,gBAC9B7C,SAAU,SAACU,GAAQ,EAAK9L,MAAMgO,mBAAmB,EAAGlC,MAExD,0BAAM5M,MAAO,CAAE4O,SAAU,UAAY7O,UAAU,QAA/C,uBACA,kBAAC,EAAD,CAAUqF,SAAS,aACnB,0BAAMpF,MAAO,CAAE4O,SAAU,UAAY7O,UAAU,QAA/C,4BACA,kBAAC,EAAD,CAAUqF,SAAS,iBAEvB,yBAAKrF,UAAU,WACX,yBAAKoB,QAASN,KAAKoF,aAAclG,UAAU,cAA3C,iB,GAhFFK,IAAMC,WA0HbY,gBA3BS,SAACC,GACrB,MAAO,CACHyE,YAAazE,EAAMyE,YACnBqJ,MAAO9N,EAAMyK,UACb0B,gBAAiBnM,EAAMmM,gBACvBrB,YAAa9K,EAAM8K,gBAIA,SAAC1K,GACxB,MAAO,CACHgF,SAAU,SAAC1C,GACPtC,EAAS,CACLE,KAAM,YACNoC,IAAKA,KAGbkL,mBAAoB,SAACG,EAAQrC,GACzBtL,EAAS,CACLE,KAAM,uBACNyN,OAAQA,EACR9I,KAAMyG,EAAEE,OAAOzI,YAMhBpD,CAA6CsN,I,6fC3H5D,IAAMjH,GAASC,IAAOC,IAAV,KAIN,GAiBE,IASR,SAASC,GAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASvD,EAAQ,EAARA,KAAQ,EAMXwD,mBACX,CACID,UACAvD,QAEJyD,aATJC,EAF0B,EAE1BA,cACAC,EAH0B,EAG1BA,kBACAC,EAJ0B,EAI1BA,aACAC,EAL0B,EAK1BA,KACAC,EAN0B,EAM1BA,WAUEC,EAAgBF,EAEtB,OACI,oCACI,0BAAWH,IACP,+BACKE,EAAalF,KAAI,SAAAsF,GAAW,OACzB,uBAAQA,EAAYC,sBACfD,EAAYpC,QAAQlD,KAAI,SAAAwF,YAkBrC,0BAAWP,IACNI,EAAcrF,KACX,SAACyF,EAAKC,GAEF,OADAN,EAAWK,GAEP,uBAAQA,EAAIE,cACPF,EAAIG,MAAM5F,KAAI,SAAA6F,GACX,OACI,uBAAQA,EAAKC,eAAiBD,EAAKE,OAAO,kBAS1E,8BA0GZ,IAwBe3H,gBAPS,SAACC,GACrB,MAAO,CACHgO,QAAShO,EAAMgO,QACftM,OAAQ1B,EAAMgO,QAAQtM,WApBH,SAACtB,GACxB,MAAO,CACH6N,WAAY,SAACC,GACT9N,EAAS,CACLE,KAAM,cACN4N,aAAcA,KAGtBC,eAAgB,SAACzL,GACbtC,EAAS,CACLE,KAAM,kBACNoC,IAAKA,QAaN3C,EA7Hf,SAAsBH,GAClBwO,qBAAU,WAAM,4CACZ,4BAAA/J,EAAA,sEACuBM,IAAM0J,KAAK,gDADlC,OACQvJ,EADR,OAEIlF,EAAMqO,WAAWnJ,EAAO7B,MAF5B,4CADY,uBAAC,WAAD,wBAKZqL,KACD,IAEH,IAAMC,EAAa,WACfC,KAAKC,KAAK,CACNxG,MAAO,sCACPyG,MAAO,WACPC,gBAAiB,CACbC,eAAgB,OAEpBC,kBAAkB,EAClBC,kBAAmB,OACnBC,qBAAqB,EACrBC,WAAY,SAAC5L,GACT,OAAOuB,IAAM0J,KAAK,0CAA2C,CACzDY,QAAS7L,EACT9D,GAAI,kBACLgD,MAAK,SAAAwC,GACJ,OAAOA,EAAO7B,QACfiM,OAAM,SAAAC,GACLX,KAAKY,sBAAL,0BACuBD,QAI/BE,kBAAmB,kBAAOb,KAAKc,eAChChN,MAAK,SAACwC,GACLhE,QAAQC,IAAI+D,GACRA,EAAO3B,OACPqL,KAAKC,KACD,gBACA,8BACA,eAKVjI,EAAUtH,IAAM0I,SAClB,iBAAM,CACF,CACIC,OAAQ,8BACRrB,QAAS,CACL,CACIqB,OAAQ,eACRC,SAAU,cACVC,KAAM,SAACnI,GAEH,OADAkB,QAAQC,IAAInB,EAAMuD,OACX,mCAAsBhD,GAAfP,EAAMuD,MAAqB,IAAMvD,EAAMuD,SAG7D,CACI0E,OAAQ,UACRC,SAAU,WACVC,KAAM,SAACmB,GAAD,OACF,uBAAG/C,KAAK,IAAIrH,MAAO,CAAEyQ,OAAQ,UAAWC,eAAgB,QACpDvP,QAAS,WAAQL,EAAMuO,eAAejF,EAAO/F,cAC5BhD,GAAhB+I,EAAO/F,MAAqB,IAAM,UAI/C,CACI0E,OAAQ,QACRC,SAAU,GACVC,KAAM,SAACnI,GACH,OAAIA,EAAMwH,IAAIqI,SAASC,YACZ,uBAAG5Q,MAAO,CAAE0Q,eAAgB,QAAUrJ,KAAK,IAAIlG,QAASsO,GAAxD,SAEA,uBAAGzP,MAAO,CAAE0Q,eAAgB,QAAUrJ,KAAK,IAAIlG,QAASsO,GAAxD,OAKnB,CACI1G,OAAQ,OACRC,SAAU,YACVC,KAAM,SAACnI,GACH,OAAO,mCAAsBO,GAAfP,EAAMuD,MAAqB,IAAM,IAAIrB,KAAKlC,EAAMuD,OAAOwM,6BAMzF,IAGJ,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAOnJ,QAASA,EAASvD,KACG,GAAxBrD,EAAMoO,QAAQtM,OACV,CAAC,CAAEG,SAAU,IAAKkC,OAAQ,IAAK6L,MAAO,IAAK1H,KAAM,IAAKjG,SAAU,MAChErC,EAAMoO,cC7LpB6B,I,yDACF,WAAYjQ,GAAQ,uCACVA,G,qDAGN,OACI,6BACI,yBAAKf,UAAU,YACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,6BAA6BoB,QAASN,KAAKC,MAAMkQ,aAC5D,uBAAGtQ,MAAM,2CAA2CV,MAAO,CAAE4J,MAAO,aACpE,uBAAGlJ,MAAM,0BAA0BV,MAAO,CAAE4J,MAAO,YAEvD,kBAAC,SAAD,CAAQN,UAAU,gEACd,kBAAC,IAAD,CAAQC,QAAS1I,KAAKC,MAAMmQ,eAAerN,a,GAdvCxD,IAAMC,YAsCnBY,gBAhBS,SAACC,GACrB,MAAO,CACH+P,eAAgB/P,EAAM+P,mBAIH,SAAC3P,GACxB,MAAO,CACH0P,YAAa,WACT1P,EAAS,CACLE,KAAM,qBAMPP,CAA6C8P,IC7BtDG,G,uKAEE,OACI,yBAAKnR,UAAU,QACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOQ,OAAK,EAAC4Q,KAAK,KACd,yBAAKpR,UAAU,cAKa,GAA3Bc,KAAKC,MAAMsQ,cAAwB,kBAAC,EAAD,MACT,GAA1BvQ,KAAKC,MAAMuQ,aAAuB,kBAAC,EAAD,MAEnC,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOF,KAAK,UACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,uBACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,iBACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,GAAD,MACsC,GAArCtQ,KAAKC,MAAMmQ,eAAelK,SAAmB,kBAAC,GAAD,a,GA9BnD3G,IAAMC,WA8CVY,gBARS,SAACC,GACrB,MAAO,CACHkQ,aAAclQ,EAAMkQ,aACpBC,YAAanQ,EAAMwI,QAAQ4H,KAC3BL,eAAgB/P,EAAM+P,kBAIfhQ,CAAyBiQ,ICvCzBK,G,uKAdX,OACE,kBAAC,IAAD,KACE,yBAAKxR,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,GAAD,a,GARMK,IAAMC,WCGJmR,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICiFFjP,GACAyD,GACAyL,GACAC,G,2BAnGEC,I,OAAY,CACdvG,SAAU,gBACVG,UAAW,yBACXyF,cAAc,EACdrQ,kBAAmB,EACnBiK,OAAQ,uCACRrI,MAAO,CACH,CACIuG,IAAK,EACLC,MAAO,MACPlE,OAAQ,kBACRmE,MAAM,IAAIpG,MAAO6N,sBAErB,CACI3H,IAAK,EACLC,MAAO,MACPlE,OAAQ,UACRmE,MAAM,IAAIpG,MAAO6N,sBAErB,CACI3H,IAAK,EACLC,MAAO,MACPlE,OAAQ,UACRmE,MAAM,IAAIpG,MAAO6N,sBAErB,CACI3H,IAAK,EACLC,MAAO,MACPlE,OAAQ,UACRmE,MAAM,IAAIpG,MAAO6N,sBAErB,CACI3H,IAAK,EACLC,MAAO,MACPlE,OAAQ,UACRmE,MAAM,IAAIpG,MAAO6N,uBAGzBnH,QAAS,CACL9F,IAAK,KACL0N,MAAM,GAEVpC,QAAS,GACT+B,eAAgB,CACZlK,SAAS,EACTnD,IAAK,MAET+B,YAAa,CACTqM,SAAU,GACVhD,MAAO,GACP4B,YAAa,GACbhL,WAAY,GACZ6I,aAAc,CACVjE,SAAU,GACVC,SAAU,GACVwH,YAAa,IAEjBhF,aAAc,GACdC,YAAa,GACbC,WAAY,GACZC,UAAW,GACXc,SAAU,IAAIlL,KACd6L,gBAAiB,GACjBE,gBAAiB,IAErBlG,cAAe,GAEfmD,YAAa,CACTI,QAAS,CACL,2CACA,yFACA,8BACA,6DACA,+DACA,wDACA,0EACA,4CACA,iEACA,uDACA,uFACA,6DACA,qDACA,6FACA,mBAEJH,SAAU,GACVQ,OAAQ,IAEZY,gBAAiB,CAAC,CACdlH,KAAM,GACN+G,YAAa,GACbC,WAAY,GACZC,UAAW,OAwLJ8E,GA/KKC,cAAQ,SAACC,EAAOC,GAChC,OAAQA,EAAO7Q,MACX,IAAK,kBACD4Q,EAAMhB,aAAeiB,EAAO9Q,OAC5B,MACJ,IAAK,WACDoB,GAAQgO,aAASyB,GAAOzP,MACxBX,QAAQC,IAAIU,IACZyD,GAAQ,CAAI,CACRC,GAAIgM,EAAOC,OACXvP,SAAUsP,EAAOvP,KAAKoC,KAAKiB,KAC3BlB,QAAQ,EACR6L,MAAO,IACP1H,MAAM,IAAIpG,MAAO6N,qBACjB1N,SAAU,OANN,oBAOFR,KACNyP,EAAMzP,MAAQyD,GACd,MACJ,IAAK,cACD,IAAIkM,EAASD,EAAOE,SAASD,OACzBxB,EAAQuB,EAAOE,SAASzB,MACxBlN,EAAMyO,EAAOE,SAASC,KACtBC,EAAmBJ,EAAOE,SAASE,kBACvC9P,GAAQgO,aAASyB,GAAOzP,OAClBE,KAAI,SAACC,EAAMwJ,GACTxJ,EAAKuD,IAAMiM,IACXF,EAAMzP,MAAM2J,GAAOwE,MAAQA,EAC3BsB,EAAMzP,MAAM2J,GAAOnJ,SAAWS,EAC9BwO,EAAMzP,MAAM2J,GAAOrH,QAAS,EAC5BmN,EAAMzP,MAAM2J,GAAOmG,iBAAmBA,MAG9CL,EAAMrR,kBAAoB4P,aAASyB,GAAOrR,kBAAoB,EAC9D,MACJ,IAAK,eACDiB,QAAQC,IAAIoQ,EAAOzO,KACnBwO,EAAM1I,QAAQ4H,MAAO,EACrBc,EAAM1I,QAAQ9F,IAAMyO,EAAOzO,IAC3B,MACJ,IAAK,gBACDwO,EAAM1I,QAAQ4H,MAAO,EACrBc,EAAM1I,QAAQ9F,IAAM,KACpB,MACJ,IAAK,cAGL,IAAK,kBACDwO,EAAMlD,QAAUmD,EAAOjD,aACvB,MACJ,IAAK,kBACDgD,EAAMnB,eAAiB,CACnBlK,SAAS,EACTnD,IAAKyO,EAAOzO,KAEhB,MACJ,IAAK,eACDwO,EAAMnB,eAAiB,CACnBlK,SAAS,EACTnD,IAAK,MAET,MACJ,IAAK,sBACGyO,EAAOL,WACPI,EAAMzM,YAAYqM,SAAWK,EAAOL,UAEpCK,EAAOrD,QACPoD,EAAMzM,YAAYqJ,MAAQqD,EAAOrD,OAEjCqD,EAAOzB,cACPwB,EAAMzM,YAAYiL,YAAcyB,EAAOzB,aAEvCyB,EAAOzM,aACPwM,EAAMzM,YAAYC,WAAayM,EAAOzM,YAEtCyM,EAAOpF,eACPmF,EAAMzM,YAAYsH,aAAeoF,EAAOpF,cAExCoF,EAAOnF,cACPkF,EAAMzM,YAAYuH,YAAcmF,EAAOnF,aAEvCmF,EAAOlF,aACPiF,EAAMzM,YAAYwH,WAAakF,EAAOlF,YAEtCkF,EAAOjF,YACPgF,EAAMzM,YAAYyH,UAAYiF,EAAOjF,WAErCiF,EAAOnE,WACPkE,EAAMzM,YAAYuI,SAAWmE,EAAOnE,UAExC,MACJ,IAAK,YACD,IAAIwE,EAAMN,EAAMvJ,cAChB6J,EAAIC,KAAK,CACLzJ,IAAKwJ,EAAI9P,OAAS,EAClBuG,MAAOwH,aAASyB,GAAOzM,YAAYC,WACnCX,OAAQ,UACRrB,IAAKyO,EAAOzO,IACZwF,MAAM,IAAIpG,MAAO6N,uBAEzB,IAAK,sBACDuB,EAAMpG,YAAYC,SAAW0E,aAASyB,GAAOpG,YAAYI,QAAQiG,EAAOtF,eACxE,MACJ,IAAK,wBACDqF,EAAM/E,gBAAgBgF,EAAO/F,OAAOnG,KAAOkM,EAAOlM,KAClD,MACJ,IAAK,8BACDiM,EAAM/E,gBAAgBgF,EAAO/F,OAAOgC,WAAa+D,EAAO/D,WACxD,MACJ,IAAK,gBACDuD,GAASlB,aAASyB,GAAO/E,gBAAgBuF,QACzC5Q,QAAQC,IAAI4P,IACZA,GAAOgB,OAAOR,EAAO/F,MAAQ,EAAG,EAAG,CAC/BnG,KAAM,GACN+G,YAAa,GACbC,WAAY,GACZC,UAAW,KAEfgF,EAAM/E,gBAAkBwE,GACxB,MACJ,IAAK,mBACoB,GAAjBA,GAAOjP,OACPwP,EAAM/E,gBAAkB,CAAC,CACrBlH,KAAM,GACNmI,WAAY,OAGhBuD,GAASlB,aAASyB,GAAO/E,gBAAgBuF,SAClCC,OAAOR,EAAO/F,MAAO,GAC5B8F,EAAM/E,gBAAkBwE,IAE5B,MACJ,IAAK,eACDC,GAAUnB,aAASyB,GAAOzM,YAAY8I,aAAa4D,EAAOjN,UAAUwN,SAC5DD,KAAKN,EAAOvP,MACpBsP,EAAMzM,YAAY8I,aAAa4D,EAAOjN,UAAY0M,GAClD,MACJ,IAAK,cAEDA,IADAA,GAAUnB,aAASyB,GAAOzM,YAAY8I,aAAa4D,EAAOjN,UAAUwN,SAClD1I,QAAO,SAACpH,GACtB,OAAIA,EAAKoC,KAAKiB,MAAQkM,EAAOvP,KAAKoC,KAAKiB,QAM3CiM,EAAMzM,YAAY8I,aAAa4D,EAAOjN,UAAY0M,GAClD,MACJ,IAAK,sBACDM,EAAMpG,YAAYS,OAAS4F,EAAO5F,OAClC,MACJ,IAAK,2BACG4F,EAAOlM,OACPiM,EAAM/E,gBAAgBgF,EAAO/F,OAAOnG,KAAOkM,EAAOlM,MAElDkM,EAAOnF,cACPkF,EAAM/E,gBAAgBgF,EAAO/F,OAAOY,YAAcmF,EAAOnF,aAEzDmF,EAAOlF,aACPiF,EAAM/E,gBAAgBgF,EAAO/F,OAAOa,WAAakF,EAAOlF,YAExDkF,EAAOjF,YACPgF,EAAM/E,gBAAgBgF,EAAO/F,OAAOc,UAAYiF,EAAOjF,WAE3D,MACJ,IAAK,uBACoB,GAAjBiF,EAAOpD,OACPmD,EAAMzM,YAAYkJ,gBAAkBwD,EAAOlM,KACnB,GAAjBkM,EAAOpD,SACdmD,EAAMzM,YAAYoJ,gBAAkBsD,EAAOlM,SAIxD4L,I,UC1QGe,GAAQC,uBAAYb,GAAac,kCAEvCC,IAASrK,OACP,kBAAC,IAAMsK,WAAP,KACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,QAGJK,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/P,MAAK,SAAAgQ,GACJA,EAAaC,gBAEdrD,OAAM,SAAAC,GACLrO,QAAQqO,MAAMA,EAAMF,a","file":"static/js/main.fe49abfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePic.f374e2f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sample1.ac887726.pdf\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport profilePic from '../../assets/img/profilePic.jpg'\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Navbar\">\r\n                <span className=\"title\">BITS<span style={{ fontWeight: '500' }}> SRCD</span></span>\r\n                <img src={profilePic} className=\"profilePic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Sidebar\">\r\n                <ul className=\"menuList\">\r\n                    <li className=\"menuItem\"><NavLink exact to=\"/\" activeClassName=\"active\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>Dashboard</NavLink></li>\r\n                    <li className=\"menuItem\"><NavLink to=\"/form\" activeClassName=\"active\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i>New Submission</NavLink></li>\r\n                    <li className=\"menuItem\"><NavLink to=\"/admin\" activeClassName=\"active\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i>Admin</NavLink></li>\r\n                    {/* <li className=\"menuItem\"><NavLink to=\"/chatbot\" activeClassName=\"active\"><i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>Chatbot</NavLink></li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './InvoicesProcessedCard.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass InvoicesProcessedCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"InvoicesProcessedCard\">\r\n                <span className=\"number\">{this.props.invoicesProcessed}</span>\r\n                <span className=\"text\">Invoices<br />Processed</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        invoicesProcessed: state.invoicesProcessed\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(InvoicesProcessedCard);","import React from 'react';\r\nimport './UploadCard.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UploadCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div onClick={() => { this.props.toggleUploader(true) }} className=\"UploadCard\">\r\n                <i className=\"fa fa-upload image\" aria-hidden=\"true\"></i>\r\n                <span className=\"text\">Upload<br />Files</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleUploader: (toggle) => {\r\n            dispatch({\r\n                type: 'TOGGLE_UPLOADER',\r\n                toggle: toggle\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(undefined, mapDispatchToProps)(UploadCard);","import React from 'react';\r\nimport './DownloadCard.css';\r\nimport JSZip from 'jszip';\r\nimport JSZipUtils from 'jszip-utils'\r\nimport { connect } from 'react-redux';\r\nimport { saveAs } from 'file-saver';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nclass DownloadCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            downlaoding: false,\r\n            percentage: 0\r\n        }\r\n    }\r\n\r\n    urlToPromise(url) {\r\n        return new Promise(function (resolve, reject) {\r\n            JSZipUtils.getBinaryContent(url, function (err, data) {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    updatePercent = (metadata) => {\r\n        var msg = \"progression : \" + metadata.percent.toFixed(2) + \" %\";\r\n        if (metadata.currentFile) {\r\n            msg += \", current file = \" + metadata.currentFile;\r\n        }\r\n        // showMessage(msg);\r\n        // updatePercent(metadata.percent | 0)\r\n        console.log(msg);\r\n        console.log(metadata.percent | 0);\r\n        if (this.state.percentage == 100) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    downlaoding: false,\r\n                    percentage: 0\r\n                })\r\n            }, 1000)\r\n        }\r\n        this.setState({\r\n            downlaoding: true,\r\n            percentage: Math.floor(metadata.percent)\r\n        })\r\n    }\r\n\r\n    downloadZip = () => {\r\n        let zip = new JSZip();\r\n        console.log('Hi there!');\r\n        if (this.props.files.length == 0) {\r\n            alert('No files download!');\r\n            return;\r\n        }\r\n        this.props.files.map((file) => {\r\n            console.log('haah');\r\n            zip.file(file.filename + '-' + new Date().getTime().toString() + '.' + file.download.split('.')[\r\n                file.download.split('.').length - 1],\r\n                this.urlToPromise(\r\n                    file.download\r\n                ), {\r\n                binary: true\r\n            });\r\n        })\r\n        zip.generateAsync({\r\n            type: \"blob\"\r\n        }, this.updatePercent)\r\n            .then(function callback(blob) {\r\n\r\n                // see FileSaver.js\r\n                saveAs(blob, \"allFiles.zip\");\r\n            });\r\n    }\r\n    render() {\r\n        let downloadJSX;\r\n        if (this.state.downlaoding == false) {\r\n            downloadJSX = <i className=\"fa fa-download image\" aria-hidden=\"true\"></i>;\r\n        } else {\r\n            downloadJSX = <CircularProgressbar\r\n                value={this.state.percentage}\r\n                text={`${this.state.percentage}%`}\r\n                className=\"circleProgress\"\r\n                styles={buildStyles({\r\n                    trailColor: '#d6d6d6',\r\n                    backgroundColor: '#729fe5',\r\n                    textColor: '#729fe5',\r\n                    pathColor: '#729fe5'\r\n                })} />\r\n        }\r\n        return (\r\n            <div onClick={this.downloadZip} className=\"DownloadCard\">\r\n                {downloadJSX}\r\n                <span className=\"text\">Download<br />All Files</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        files: state.files\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DownloadCard);","import React from 'react';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport './Uploader.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass Uploader extends React.Component {\r\n    getUploadParams = () => {\r\n        return { url: 'https://httpbin.org/post' }\r\n    }\r\n\r\n    handleChangeStatus = (f, status) => {\r\n        console.log(status, f, f.meta)\r\n        if (status == 'done') {\r\n            this.props.uploadFile(this.props.fileType, { ...f })\r\n        } else if (status == \"removed\") {\r\n            this.props.deleteFile(this.props.fileType, { ...f })\r\n        }\r\n    }\r\n\r\n    submitFile = async (files) => {\r\n        const filesData = new FormData();\r\n        filesData.append('title', this.props.formDetails.paperTitle);\r\n        files.map((file) => {\r\n            filesData.append('docs', file);\r\n        })\r\n        let result = await axios({\r\n            method: \"POST\",\r\n            url: \"https://srcd-temp.herokuapp.com/submit\",\r\n            data: filesData,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    handleSubmit = async (files, allFiles) => {\r\n        console.log(files.map(f => f.meta.name));\r\n        let newFiles = files.map((file) => {\r\n            return file.file;\r\n        })\r\n        let result = await this.submitFile(newFiles);\r\n        let url = 'https://srcd-temp.herokuapp.com/check/' + result.id + '/0';\r\n        this.props.addFiles(url);\r\n        allFiles.forEach(f => f.remove());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropzone\r\n                onChangeStatus={this.handleChangeStatus}\r\n                styles={{\r\n                    dropzone: {\r\n                        width: '70%',\r\n                        height: '95%',\r\n                        borderRadius: '2%',\r\n                        // overflow: 'hidden',\r\n                        backgroundColor: 'white',\r\n                        borderRadius: '2%',\r\n                        margin: 0,\r\n                        marginTop: '2%',\r\n                    },\r\n                    submitButton: {\r\n                        display: 'none'\r\n                    }\r\n                }}\r\n                inputContent=\"Upload or Drag Documents\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFiles: (url) => {\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                url: url\r\n            })\r\n        },\r\n        uploadFile: (fileType, file) => {\r\n            dispatch({\r\n                type: 'UPLOAD_FILE',\r\n                fileType: fileType,\r\n                file: file\r\n            })\r\n        },\r\n        deleteFile: (fileType, file) => {\r\n            dispatch({\r\n                type: 'DELETE_FILE',\r\n                fileType: fileType,\r\n                file: file\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploader);","import React from 'react';\r\nimport './Loader.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Loader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.showPreview(this.props.value);\r\n    }\r\n    render() {\r\n        let statusJSX;\r\n        if (this.props.value == false) {\r\n            statusJSX = <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n                <div class=\"loader\"></div>\r\n            </div>;\r\n        } else if (this.props.value == '-') {\r\n            statusJSX = '-';\r\n        } else {\r\n            statusJSX = <div>\r\n                <a href=\"#\" onClick={this.handleClick}>(View)</a>\r\n            </div>;\r\n        }\r\n        return (\r\n            statusJSX\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showPreview: (url) => {\r\n            dispatch({\r\n                type: 'SHOW_PREVIEW',\r\n                url: url\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Loader);","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\n// import \"react-table/react-table.css\";\r\nimport \"./ProcessedTable.css\";\r\nimport Loader from './Loader/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Styles = styled.div`\r\n  ${'' /* padding: 1rem; */}\r\n  table {\r\n    border-spacing: 0;\r\n    ${'' /* border: 1px solid black; */}\r\n    width:97%;\r\n    background-color:white;\r\n    border-radius:1%;\r\n    margin:auto;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      ${'' /* border-bottom: 1px solid black;\r\n      border-right: 1px solid black; */}\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow } = useTable(\r\n            {\r\n                columns,\r\n                data\r\n            },\r\n            useSortBy\r\n        )\r\n\r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                // Add the sorting props to control sorting. For this example\r\n                                // we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator */}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ProcessedTable(props) {\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Submitted Papers',\r\n                columns: [\r\n                    {\r\n                        Header: 'S No.',\r\n                        accessor: 'sno'\r\n                    },\r\n                    {\r\n                        Header: 'Title',\r\n                        accessor: 'title',\r\n                    },\r\n                    {\r\n                        Header: 'View',\r\n                        accessor: 'url',\r\n                        Cell: props => <Loader {...props} />\r\n                    },\r\n                    {\r\n                        Header: 'Status',\r\n                        accessor: 'status'\r\n                    },\r\n                    {\r\n                        Header: 'Date',\r\n                        accessor: 'date',\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    return (\r\n        <Styles>\r\n            <Table columns={columns} data={\r\n                props.files.length == 0 ?\r\n                    [{ sno: '-', status: '-', title: '-', url: '-', date: '-' }] :\r\n                    props.files} />\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        files: state.uploadedFiles,\r\n        length: state.uploadedFiles.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProcessedTable);","import React from 'react';\r\nimport { Worker } from '@phuocng/react-pdf-viewer';\r\n// Import the main component\r\nimport Viewer from '@phuocng/react-pdf-viewer';\r\n// Import the CSS\r\nimport '@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css';\r\n\r\nclass PDFViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.4.456/build/pdf.worker.min.js\">\r\n                <Viewer fileUrl={this.props.url} />\r\n            </Worker>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PDFViewer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ProcessedViewer.css';\r\nimport PDFViewer from './PDFViewer/PDFViewer';\r\nimport x from './Sample1.pdf'\r\n\r\nclass ProcessedViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"ProcessedViewer\">\r\n                    <div className=\"preview\" style={{ backgroundImage: `url(${this.props.preview.url})` }}>\r\n                        <PDFViewer url={this.props.preview.url} />\r\n                    </div>\r\n                    <div className=\"fa-stack fa-4x crossButton\" onClick={this.props.closePreview}>\r\n                        <i class=\"fa fa-circle fa-stack-2x icon-background\"></i>\r\n                        <i class=\"fa fa-times fa-stack-1x\" style={{ color: 'white' }}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        preview: state.preview\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closePreview: () => {\r\n            dispatch({\r\n                type: 'CLOSE_PREVIEW'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedViewer);","import React from 'react';\r\nimport './Query.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass Query extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columnDefs: [{\r\n                headerName: \"Principle Invest.\", field: \"author\", sortable: true, filter: true\r\n            }, {\r\n                headerName: \"Proposal\", field: \"proposal\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Comments\", field: \"comments\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Endorsements\", field: \"endorsments\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Status\", field: \"status\", sortable: true, filter: true\r\n            }],\r\n            rowData: []\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        // let allUploads = await axios.post('http://localhost:8000/api/getAllUploads', {\r\n        //     userID: this.props.userID\r\n        // });\r\n        // let allUploadsProcessed = allUploads.data.map((upload) => {\r\n        //     upload.createdAt = new Date(upload.createdAt).toLocaleDateString();\r\n        //     return upload;\r\n        // })\r\n        let allUploadsProcessed = [\r\n            {\r\n                author: 'X',\r\n                proposal: 'www.google.com',\r\n                comments: 'www.google.com',\r\n                endorsments: 'www.google.com',\r\n                status: 'Pending'\r\n            },\r\n            {\r\n                author: 'Y',\r\n                proposal: 'www.google.com',\r\n                comments: 'www.google.com',\r\n                endorsments: 'www.google.com',\r\n                status: 'Pending'\r\n            },\r\n            {\r\n                author: 'Y',\r\n                proposal: 'www.google.com',\r\n                comments: 'www.google.com',\r\n                endorsments: 'www.google.com',\r\n                status: 'Pending'\r\n            },\r\n            {\r\n                author: 'X',\r\n                proposal: 'www.google.com',\r\n                comments: 'www.google.com',\r\n                endorsments: 'www.google.com',\r\n                status: 'Pending'\r\n            },\r\n        ]\r\n        this.setState({\r\n            rowData: allUploadsProcessed\r\n        })\r\n        this.refs.agGrid.api.sizeColumnsToFit()\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    height: '90%',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    ref=\"agGrid\"\r\n                    columnDefs={this.state.columnDefs}\r\n                    rowData={this.state.rowData}>\r\n                </AgGridReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userID: state.userID\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Query);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass FormNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fields\">\r\n                <span className=\"heading\">Application</span>\r\n                <div className=\"pages\">\r\n                    <NavLink exact to=\"/form/\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Basic Details\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/form/paper-details\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Scheme\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/form/uploads\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Uploads\r\n                    </NavLink>\r\n                    {/* <NavLink exact to=\"/xyz\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Page 4\r\n                    </NavLink> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormNav;","import React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass BasicDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderValue = (value) => {\r\n        return value;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Full Name\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Full Name\"\r\n                            value={this.props.userName}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                        />\r\n                        <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Email\"\r\n                            value={this.props.userEmail}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                        />\r\n                        {/* <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Phone Number\"\r\n                            onChange={(e) => { this.props.editDetails('phoneNumber', e) }}\r\n                        /> */}\r\n                        <FormControl className=\"formControl\">\r\n                            <InputLabel id=\"demo-simple-select-label\">Choose your funding call</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                className=\"customSelect\"\r\n                                value={this.props.fundingCall.selected}\r\n                                renderValue={() => this.renderValue(this.props.fundingCall.selected)}\r\n                                onChange={this.props.selectFundingCall}\r\n                            >\r\n                                {this.props.fundingCall.options.map(\r\n                                    (option, index) => <MenuItem value={index}>{option}</MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                        {this.props.fundingCall.selected.includes('Other') && <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Please Specify\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Email\"\r\n                            value={this.props.fundingCall.others}\r\n                            onChange={this.props.changeOthers}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/form/paper-details\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userName: state.userName,\r\n        userEmail: state.userEmail,\r\n        formDetails: state.formDetails,\r\n        fundingCall: state.fundingCall,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editDetails: (field, e) => {\r\n            let obj = {};\r\n            obj.type = \"FORM_DETAILS_CHANGE\";\r\n            obj[field] = e.target.value;\r\n            dispatch(obj);\r\n        },\r\n        selectFundingCall: (e) => {\r\n            dispatch({\r\n                type: 'SELECT_FUNDING_CALL',\r\n                selectedIndex: e.target.value\r\n            })\r\n        },\r\n        changeOthers: (e) => {\r\n            dispatch({\r\n                type: 'FUNDING_CALL_OTHERS',\r\n                others: e.target.value\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicDetails);","import 'date-fns';\r\nimport React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Uploader from '../Uploader/Uploader';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass PaperDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Title of Proposal\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Title\"\r\n                            value={this.props.formDetails.paperTitle}\r\n                            onChange={(e) => { this.props.editDetails('paperTitle', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Principle Investigator\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Principle Investigator\"\r\n                            value={this.props.formDetails.paperAuthors}\r\n                            onChange={(e) => { this.props.editDetails('paperAuthors', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Designation\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Designation\"\r\n                            value={this.props.formDetails.designation}\r\n                            onChange={(e) => { this.props.editDetails('designation', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Department\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Department\"\r\n                            value={this.props.formDetails.department}\r\n                            onChange={(e) => { this.props.editDetails('department', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Institute\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Institute\"\r\n                            value={this.props.formDetails.institute}\r\n                            onChange={(e) => { this.props.editDetails('institute', e) }}\r\n                        />\r\n                        <span className=\"info\">Co Investigators (Optional)</span>\r\n                        {this.props.coInvestigators.map((row, index) => {\r\n                            return (\r\n                                <div key={index} className=\"coInvestigatorsRow\">\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Name\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Name\"\r\n                                        value={row.name}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'name') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Designation\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Designation\"\r\n                                        value={row.designation}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'designation') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Department\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Department\"\r\n                                        value={row.department}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'department') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Institute\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Institute\"\r\n                                        value={row.institute}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'institute') }}\r\n                                    />\r\n                                    <div>\r\n                                        <i onClick={() => { this.props.addCoInvest(index) }} className=\"fa fa-plus icons\" aria-hidden=\"true\"></i>\r\n                                        <i onClick={() => { this.props.deleteCoInvest(index) }} className=\"fa fa-trash icons\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"flex-start\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    className=\"customInput\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Last Date of Submission as mentioned by agency\"\r\n                                    value={this.props.formDetails.lastDate}\r\n                                    onChange={(e) => { this.props.editDetails('lastDate', e) }}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        {/* <Uploader /> */}\r\n                    </div>\r\n                    {/* <div className=\"lastRow\">\r\n                        <div className={\r\n                            this.props.formDetails.filePipeline.length == 0 ? 'nextButtonDisabled' : 'nextButton'\r\n                        }>\r\n                            Submit\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/form/uploads\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails,\r\n        coInvestigators: state.coInvestigators\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editDetails: (field, e) => {\r\n            let obj = {};\r\n            obj.type = \"FORM_DETAILS_CHANGE\";\r\n            if (field == 'lastDate') {\r\n                obj[field] = e;\r\n                console.log(e);\r\n            } else {\r\n                obj[field] = e.target.value;\r\n            }\r\n            dispatch(obj);\r\n        },\r\n        coInvestNameChange: (e, index) => {\r\n            dispatch({\r\n                type: \"CO_INVEST_NAME_CHANGE\",\r\n                name: e.target.value,\r\n                index: index\r\n            })\r\n        },\r\n        coInvestAffliationChange: (e, index) => {\r\n            dispatch({\r\n                type: \"CO_INVEST_AFFLIATION_CHANGE\",\r\n                affliation: e.target.value,\r\n                index: index\r\n            })\r\n        },\r\n        coInvestDetailsChange: (e, index, key) => {\r\n            let obj = {}\r\n            obj.type = \"CO_INVEST_DETAILS_CHANGE\";\r\n            obj[key] = e.target.value;\r\n            obj.index = index\r\n            dispatch(obj)\r\n        },\r\n        addCoInvest: (index) => {\r\n            dispatch({\r\n                type: \"ADD_CO_INVEST\",\r\n                index: index\r\n            })\r\n        },\r\n        deleteCoInvest: (index) => {\r\n            dispatch({\r\n                type: \"DELETE_CO_INVEST\",\r\n                index: index\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaperDetails);","import React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Uploader from '../Uploader/Uploader';\r\nimport axios from 'axios';\r\n\r\nclass Uploads extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    submitFile = async () => {\r\n        const filesData = new FormData();\r\n        filesData.append('email', 'example');\r\n        filesData.append('title', this.props.formDetails.paperTitle);\r\n        let allFilesProposal = this.props.formDetails.filePipeline.proposal[0].file;\r\n        let allFilesComments = this.props.formDetails.filePipeline.proposal[0].file;\r\n        let allFilesEndor = this.props.formDetails.filePipeline.proposal[0].file;\r\n        // files.map((file) => {\r\n        //     filesData.append('docs', file);\r\n        // })\r\n        filesData.append('projProp', allFilesProposal);\r\n        filesData.append('endoCert', allFilesEndor);\r\n        filesData.append('revComments', allFilesComments);\r\n        filesData.append('prinInvest', this.props.formDetails.paperAuthors)\r\n        filesData.append('funding', this.props.fundingCall.selected)\r\n        let result = await axios({\r\n            method: \"POST\",\r\n            url: \"https://srcd-temp.herokuapp.com/sub/submit\",\r\n            data: filesData,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        // let allFiles = this.props.formDetails.filePipeline.proposal;\r\n        // allFiles.concat(this.props.formDetails.filePipeline.comments);\r\n        // allFiles.concat(this.props.formDetails.filePipeline.edorsements);\r\n        // let newFiles = allFiles.map((file) => {\r\n        //     return file.file;\r\n        // })\r\n        let result = await this.submitFile();\r\n        console.log(result)\r\n        let url = 'https://srcd-temp.herokuapp.com/sub/' + result.id + '/0';\r\n        this.props.addFiles(url);\r\n        // allFiles.forEach(f => f.remove());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Project Proposal Summary (incl Budget)</span>\r\n                        <Uploader fileType=\"proposal\" />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Reviewer 1\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Name of Reviewer 1\"\r\n                            value={this.props.formDetails.reviewerOneName}\r\n                            onChange={(e) => { this.props.reviewerNameChange(1, e) }}\r\n                        />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Reviewer 1 Comments</span>\r\n                        <Uploader fileType=\"comments\" />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Reviewer 2\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Name of Reviewer 2\"\r\n                            value={this.props.formDetails.reviewerTwoName}\r\n                            onChange={(e) => { this.props.reviewerNameChange(2, e) }}\r\n                        />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Reviewer 2 Comments</span>\r\n                        <Uploader fileType=\"comments\" />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Endorsement Certificates</span>\r\n                        <Uploader fileType=\"edorsements\" />\r\n                    </div>\r\n                    <div className=\"lastRow\">\r\n                        <div onClick={this.handleSubmit} className=\"nextButton\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/form/paper-details\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails,\r\n        email: state.userEmail,\r\n        coInvestigators: state.coInvestigators,\r\n        fundingCall: state.fundingCall\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFiles: (url) => {\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                url: url\r\n            })\r\n        },\r\n        reviewerNameChange: (number, e) => {\r\n            dispatch({\r\n                type: 'REVIEWER_NAME_CHANGE',\r\n                number: number,\r\n                name: e.target.value\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploads);","import React, { useEffect } from 'react';\r\nimport './Chatbot.css';\r\nimport styled from 'styled-components';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n  table {\r\n    border-spacing: 0;\r\n    ${'' /* border: 1px solid black; */}\r\n    width:97%;\r\n    background-color:white;\r\n    border-radius:1%;\r\n    margin:auto;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      width:25%;\r\n      padding: 0.5rem;\r\n      ${'' /* border-bottom: 1px solid black;\r\n      border-right: 1px solid black; */}\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow } = useTable(\r\n            {\r\n                columns,\r\n                data\r\n            },\r\n            useSortBy\r\n        )\r\n\r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                // Add the sorting props to control sorting. For this example\r\n                                // we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator */}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ChatbotTable(props) {\r\n    useEffect(() => {\r\n        async function temp() {\r\n            let result = await axios.post('http://localhost:8000/api/getSupportMessages');\r\n            props.setSupport(result.data);\r\n        }\r\n        temp();\r\n    }, [])\r\n\r\n    const replyClick = () => {\r\n        Swal.fire({\r\n            title: 'Enter the message you wish to send!',\r\n            input: 'textarea',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Send',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (text) => {\r\n                return axios.post('http://localhost:8000/api/sendMessageTo', {\r\n                    message: text,\r\n                    to: '+919381872407'\r\n                }).then(result => {\r\n                    return result.data;\r\n                }).catch(error => {\r\n                    Swal.showValidationMessage(\r\n                        `Request failed: ${error}`\r\n                    )\r\n                })\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n            console.log(result);\r\n            if (result.value) {\r\n                Swal.fire(\r\n                    'Message Sent!',\r\n                    'Your message has been sent!',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Invoices Asking For Support',\r\n                columns: [\r\n                    {\r\n                        Header: 'Phone Number',\r\n                        accessor: 'phoneNumber',\r\n                        Cell: (props) => {\r\n                            console.log(props.value)\r\n                            return <span>{props.value == undefined ? '-' : props.value}</span>\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'Invoice',\r\n                        accessor: 'lastFile',\r\n                        Cell: (params) => (\r\n                            <a href='#' style={{ cursor: 'pointer', textDecoration: 'none' }}\r\n                                onClick={() => { props.displaySupport(params.value) }}>\r\n                                {params.value == undefined ? '-' : 'View'}\r\n                            </a>\r\n                        )\r\n                    },\r\n                    {\r\n                        Header: 'Reply',\r\n                        accessor: '',\r\n                        Cell: (props) => {\r\n                            if (props.row.original.phoneNumber) {\r\n                                return <a style={{ textDecoration: 'none' }} href='#' onClick={replyClick}>Reply</a>;\r\n                            } else {\r\n                                return <a style={{ textDecoration: 'none' }} href='#' onClick={replyClick}>-</a>;\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'Date',\r\n                        accessor: 'updatedAt',\r\n                        Cell: (props) => {\r\n                            return <span>{props.value == undefined ? '-' : new Date(props.value).toLocaleDateString()}</span>\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    return (\r\n        <Styles>\r\n            <Table columns={columns} data={\r\n                props.support.length == 0 ?\r\n                    [{ filename: '-', status: '-', fraud: '-', date: '-', download: '-' }] :\r\n                    props.support} />\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSupport: (supportArray) => {\r\n            dispatch({\r\n                type: 'SET_SUPPORT',\r\n                supportArray: supportArray\r\n            })\r\n        },\r\n        displaySupport: (url) => {\r\n            dispatch({\r\n                type: 'DISPLAY_SUPPORT',\r\n                url: url\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        support: state.support,\r\n        length: state.support.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatbotTable);","import React from 'react';\r\nimport { Worker } from '@phuocng/react-pdf-viewer';\r\n// Import the main component\r\nimport Viewer from '@phuocng/react-pdf-viewer';\r\n// Import the CSS\r\nimport '@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css';\r\nimport './InvoiceViewer.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass InvoiceViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"InvoiceViewer\">\r\n                    <div className=\"fa-stack fa-4x crossButton\" onClick={this.props.hideSupport}>\r\n                        <i class=\"fa fa-circle fa-stack-2x icon-background\" style={{ color: '#3b55e6' }}></i>\r\n                        <i class=\"fa fa-times fa-stack-1x\" style={{ color: 'white' }}></i>\r\n                    </div>\r\n                    <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.4.456/build/pdf.worker.min.js\">\r\n                        <Viewer fileUrl={this.props.supportDisplay.url} />\r\n                    </Worker>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        supportDisplay: state.supportDisplay\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        hideSupport: () => {\r\n            dispatch({\r\n                type: 'HIDE_SUPPORT'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceViewer);","import React from 'react';\r\nimport './Deck.css';\r\nimport InvoicesProcessedCard from './InvoicesProcessedCard/InvoicesProcessedCard';\r\nimport UploadCard from './UploadCard/UploadCard';\r\nimport DownloadCard from './DownloadCard/DownloadCard';\r\nimport Uploader from './Uploader/Uploader';\r\nimport ProcessedTable from './ProcessedTable/ProcessedTable';\r\nimport ProcessedViewer from './ProcessedViewer/ProcessedViewer';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Query from './Query/Query';\r\nimport BasicDetails from './FormSubmit/BasicDetails';\r\nimport PaperDetails from './FormSubmit/PaperDetails';\r\nimport Uploads from './FormSubmit/Uploads';\r\nimport Chatbot from './Chatbot/ChatbotTable';\r\nimport InvoiceViewer from './Chatbot/InvoiceViewer/InvoiceViewer';\r\n\r\n\r\nclass Deck extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Deck\">\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <div className=\"headerRow\">\r\n                            {/* <InvoicesProcessedCard />\r\n                            <UploadCard />\r\n                            <DownloadCard /> */}\r\n                        </div>\r\n                        {this.props.uploaderOpen == true && <Uploader />}\r\n                        {this.props.previewShow == true && <ProcessedViewer />}\r\n                        {/* <ProcessedViewer /> */}\r\n                        <ProcessedTable />\r\n                    </Route>\r\n                    <Route path=\"/admin\">\r\n                        <Query />\r\n                    </Route>\r\n                    <Route path=\"/form/paper-details\">\r\n                        <PaperDetails />\r\n                    </Route>\r\n                    <Route path=\"/form/uploads\">\r\n                        <Uploads />\r\n                    </Route>\r\n                    <Route path=\"/form\">\r\n                        <BasicDetails />\r\n                    </Route>\r\n                    <Route path=\"/chatbot\">\r\n                        <Chatbot />\r\n                        {this.props.supportDisplay.display == true && <InvoiceViewer />}\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        uploaderOpen: state.uploaderOpen,\r\n        previewShow: state.preview.show,\r\n        supportDisplay: state.supportDisplay\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Deck);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Deck from './components/Deck/Deck';\nimport { BrowserRouter } from 'react-router-dom';\nimport axios from 'axios'\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"DeckWrapper\">\n            <Sidebar />\n            <Deck />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { produce, original } from \"immer\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst initState = {\r\n    userName: 'Apoorv Sadana',\r\n    userEmail: 'apoorvsadana@gmail.com',\r\n    uploaderOpen: false,\r\n    invoicesProcessed: 0,\r\n    userID: '0fcc0cae-1870-4307-b949-7ed90788b878',\r\n    files: [\r\n        {\r\n            sno: 1,\r\n            title: 'XYZ',\r\n            status: '✅Processed',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 2,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 3,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 4,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 5,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n    ],\r\n    preview: {\r\n        url: null,\r\n        show: false\r\n    },\r\n    support: [],\r\n    supportDisplay: {\r\n        display: false,\r\n        url: null\r\n    },\r\n    formDetails: {\r\n        fullName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        paperTitle: '',\r\n        filePipeline: {\r\n            proposal: [],\r\n            comments: [],\r\n            edorsements: []\r\n        },\r\n        paperAuthors: '',\r\n        designation: '',\r\n        department: '',\r\n        institute: '',\r\n        lastDate: new Date(),\r\n        reviewerOneName: '',\r\n        reviewerTwoName: ''\r\n    },\r\n    uploadedFiles: [\r\n    ],\r\n    fundingCall: {\r\n        options: [\r\n            \"Department of Science and Technology-DST\",\r\n            \"Science and Engineering Research Board (SERB)-Extramural Research (EMR) funding scheme\",\r\n            \"Department of Biotechnology\",\r\n            \"Biotechnology Industry Research Assistance Council (BIRAC)\",\r\n            \"Board of Research in Nuclear Science(BRNS) - Research Grants\",\r\n            \"Indian Space and Research Organization (ISRO)-RESPOND\",\r\n            \"Indian Council of Social Science Research (ICSSR)-Ministry of Education\",\r\n            \"Indian Council of Medical Research (ICMR)\",\r\n            \"National Council of Education Research & Training (NCERT)-ERIC\",\r\n            \"Council of Scientific and Industrial Research (CSIR)\",\r\n            \"Defence Research and Development Organization (DRDO) –Extramural Research Grant\",\r\n            \"Shastri Institutional Collaborative Research Grant (SICRG)\",\r\n            \"Department of Science and Technology-DST-Rajasthan\",\r\n            \"Ministry of Education- IMPacting Research INnovation and Technology (IMPRINT – INDIA)\",\r\n            \"Other (specify)\"\r\n        ],\r\n        selected: \"\",\r\n        others: \"\"\r\n    },\r\n    coInvestigators: [{\r\n        name: '',\r\n        designation: '',\r\n        department: '',\r\n        institute: ''\r\n    }]\r\n}\r\n\r\nvar files;\r\nvar newFiles;\r\nvar currCo;\r\nvar currArr;\r\n\r\nconst rootReducer = produce((draft, action) => {\r\n    switch (action.type) {\r\n        case \"TOGGLE_UPLOADER\":\r\n            draft.uploaderOpen = action.toggle;\r\n            break;\r\n        case \"ADD_FILE\":\r\n            files = original(draft).files;\r\n            console.log(files);\r\n            newFiles = [{\r\n                id: action.fileID,\r\n                filename: action.file.meta.name,\r\n                status: false,\r\n                fraud: '-',\r\n                date: new Date().toLocaleDateString(),\r\n                download: null\r\n            }, ...files];\r\n            draft.files = newFiles;\r\n            break;\r\n        case \"UPDATE_FILE\":\r\n            let fileID = action.fileData.fileID;\r\n            let fraud = action.fileData.fraud;\r\n            let url = action.fileData.link;\r\n            let processedDetails = action.fileData.processedDetails;\r\n            files = original(draft).files;\r\n            files.map((file, index) => {\r\n                if (file.id == fileID) {\r\n                    draft.files[index].fraud = fraud;\r\n                    draft.files[index].download = url;\r\n                    draft.files[index].status = true;\r\n                    draft.files[index].processedDetails = processedDetails;\r\n                }\r\n            });\r\n            draft.invoicesProcessed = original(draft).invoicesProcessed + 1;\r\n            break;\r\n        case \"SHOW_PREVIEW\":\r\n            console.log(action.url)\r\n            draft.preview.show = true;\r\n            draft.preview.url = action.url;\r\n            break;\r\n        case \"CLOSE_PREVIEW\":\r\n            draft.preview.show = false;\r\n            draft.preview.url = null;\r\n            break;\r\n        case \"SET_SUPPORT\":\r\n            draft.support = action.supportArray;\r\n            break;\r\n        case \"DISPLAY_INVOICE\":\r\n            draft.support = action.supportArray;\r\n            break;\r\n        case \"DISPLAY_SUPPORT\":\r\n            draft.supportDisplay = {\r\n                display: true,\r\n                url: action.url\r\n            }\r\n            break;\r\n        case \"HIDE_SUPPORT\":\r\n            draft.supportDisplay = {\r\n                display: false,\r\n                url: null\r\n            }\r\n            break;\r\n        case \"FORM_DETAILS_CHANGE\":\r\n            if (action.fullName) {\r\n                draft.formDetails.fullName = action.fullName;\r\n            }\r\n            if (action.email) {\r\n                draft.formDetails.email = action.email;\r\n            }\r\n            if (action.phoneNumber) {\r\n                draft.formDetails.phoneNumber = action.phoneNumber;\r\n            }\r\n            if (action.paperTitle) {\r\n                draft.formDetails.paperTitle = action.paperTitle;\r\n            }\r\n            if (action.paperAuthors) {\r\n                draft.formDetails.paperAuthors = action.paperAuthors;\r\n            }\r\n            if (action.designation) {\r\n                draft.formDetails.designation = action.designation;\r\n            }\r\n            if (action.department) {\r\n                draft.formDetails.department = action.department;\r\n            }\r\n            if (action.institute) {\r\n                draft.formDetails.institute = action.institute;\r\n            }\r\n            if (action.lastDate) {\r\n                draft.formDetails.lastDate = action.lastDate;\r\n            }\r\n            break;\r\n        case \"ADD_FILES\":\r\n            let arr = draft.uploadedFiles;\r\n            arr.push({\r\n                sno: arr.length + 1,\r\n                title: original(draft).formDetails.paperTitle,\r\n                status: 'Waiting',\r\n                url: action.url,\r\n                date: new Date().toLocaleDateString()\r\n            })\r\n        case \"SELECT_FUNDING_CALL\":\r\n            draft.fundingCall.selected = original(draft).fundingCall.options[action.selectedIndex]\r\n            break\r\n        case \"CO_INVEST_NAME_CHANGE\":\r\n            draft.coInvestigators[action.index].name = action.name\r\n            break\r\n        case \"CO_INVEST_AFFLIATION_CHANGE\":\r\n            draft.coInvestigators[action.index].affliation = action.affliation\r\n            break\r\n        case \"ADD_CO_INVEST\":\r\n            currCo = original(draft).coInvestigators.slice();\r\n            console.log(currCo);\r\n            currCo.splice(action.index + 1, 0, {\r\n                name: '',\r\n                designation: '',\r\n                department: '',\r\n                institute: ''\r\n            })\r\n            draft.coInvestigators = currCo;\r\n            break\r\n        case \"DELETE_CO_INVEST\":\r\n            if (currCo.length == 1) {\r\n                draft.coInvestigators = [{\r\n                    name: '',\r\n                    affliation: ''\r\n                }];\r\n            } else {\r\n                currCo = original(draft).coInvestigators.slice();\r\n                currCo.splice(action.index, 1)\r\n                draft.coInvestigators = currCo;\r\n            }\r\n            break\r\n        case \"UPLOAD_FILE\":\r\n            currArr = original(draft).formDetails.filePipeline[action.fileType].slice()\r\n            currArr.push(action.file)\r\n            draft.formDetails.filePipeline[action.fileType] = currArr\r\n            break;\r\n        case \"DELETE_FILE\":\r\n            currArr = original(draft).formDetails.filePipeline[action.fileType].slice()\r\n            currArr = currArr.filter((file) => {\r\n                if (file.meta.name != action.file.meta.name) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            })\r\n            draft.formDetails.filePipeline[action.fileType] = currArr\r\n            break;\r\n        case \"FUNDING_CALL_OTHERS\":\r\n            draft.fundingCall.others = action.others\r\n            break\r\n        case \"CO_INVEST_DETAILS_CHANGE\":\r\n            if (action.name) {\r\n                draft.coInvestigators[action.index].name = action.name\r\n            }\r\n            if (action.designation) {\r\n                draft.coInvestigators[action.index].designation = action.designation\r\n            }\r\n            if (action.department) {\r\n                draft.coInvestigators[action.index].department = action.department\r\n            }\r\n            if (action.institute) {\r\n                draft.coInvestigators[action.index].institute = action.institute\r\n            }\r\n            break;\r\n        case \"REVIEWER_NAME_CHANGE\":\r\n            if (action.number == 1) {\r\n                draft.formDetails.reviewerOneName = action.name\r\n            } else if (action.number == 2) {\r\n                draft.formDetails.reviewerTwoName = action.name\r\n            }\r\n            break\r\n    }\r\n}, initState);\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}