{"version":3,"sources":["assets/img/bits-logo.png","assets/img/profilePic.jpg","components/Deck/ProcessedViewer/Sample1.pdf","components/Navbar/Navbar.js","components/Sidebar/Sidebar.js","components/Deck/Uploader/Uploader.js","components/Deck/ProcessedTable/Loader/Loader.js","components/Deck/ProcessedTable/ProcessedTable.js","components/Deck/ProcessedViewer/PDFViewer/PDFViewer.js","components/Deck/ProcessedViewer/ProcessedViewer.js","components/Deck/Query/Query.js","components/Deck/FormSubmit/FormNav.js","components/Deck/FormSubmit/BasicDetails.js","components/Deck/FormSubmit/PaperDetails.js","components/Deck/FormSubmit/Uploads.js","components/Deck/Chatbot/ChatbotTable.js","components/Deck/Chatbot/InvoiceViewer/InvoiceViewer.js","components/Deck/Deck.js","components/Login/Login.js","components/ProtectedRoute/ProtectedRoute.js","components/AppWrapper/AppWrapper.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","Navbar","className","style","fontWeight","src","this","props","profilePic","React","Component","connect","state","Sidebar","jsx","admin","to","activeClassName","class","aria-hidden","exact","Uploader","getUploadParams","url","handleChangeStatus","f","status","console","log","meta","uploadFile","fileType","deleteFile","submitFile","files","a","filesData","FormData","append","formDetails","paperTitle","map","file","axios","method","data","headers","result","handleSubmit","allFiles","name","newFiles","id","addFiles","forEach","remove","onChangeStatus","styles","dropzone","width","height","borderRadius","backgroundColor","submitButton","display","inputContent","dispatch","type","Loader","handleClick","showPreview","value","justifyContent","href","onClick","undefined","Styles","styled","div","Table","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","headerGroup","getHeaderGroupProps","column","row","i","getRowProps","cells","cell","getCellProps","render","uploadedFiles","length","useMemo","Header","accessor","Cell","sno","title","date","PDFViewer","workerUrl","fileUrl","ProcessedViewer","backgroundImage","preview","closePreview","color","Query","columnDefs","headerName","field","sortable","filter","cellRenderer","params","rowData","get","allUploads","counter","allUploadsProcessed","upload","author","prinInvest","proposal","_id","commentsOne","commentsTwo","endorsments","Date","toLocaleDateString","setState","refs","agGrid","api","sizeColumnsToFit","ref","userID","FormNav","BasicDetails","renderValue","TextField","label","variant","placeholder","userName","InputProps","readOnly","userEmail","FormControl","InputLabel","Select","labelId","fundingCall","selected","onChange","selectFundingCall","options","option","index","MenuItem","includes","others","changeOthers","editDetails","e","obj","target","selectedIndex","PaperDetails","paperAuthors","designation","department","institute","coInvestigators","key","coInvestDetailsChange","addCoInvest","deleteCoInvest","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","margin","lastDate","KeyboardButtonProps","coInvestNameChange","coInvestAffliationChange","affliation","Uploads","reviewerOneName","reviewerTwoName","allFilesProposal","filePipeline","allFilesCommentsOne","allFilesCommentsTwo","allFilesEndor","edorsements","loading","active","spinner","text","position","background","fontSize","reviewerNameChange","email","number","support","setSupport","supportArray","displaySupport","useEffect","post","temp","replyClick","Swal","fire","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","message","then","catch","error","showValidationMessage","allowOutsideClick","isLoading","cursor","textDecoration","original","phoneNumber","filename","fraud","download","InvoiceViewer","hideSupport","supportDisplay","Deck","path","uploaderOpen","previewShow","show","adminInit","Login","googleLoginSuccess","response","profileObj","login","imageUrl","history","push","googleLoginFailure","bitsLogo","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","projects","image","ProtectedRoute","component","AppWrapper","App","Boolean","window","location","hostname","match","currCo","currArr","initState","invoicesProcessed","fullName","rootReducer","produce","draft","action","arr2","project","toggle","fileID","fileData","link","processedDetails","arr","slice","splice","store","createStore","composeWithDevTools","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80a43266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bits-logo.47542b3a.png\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.f374e2f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sample1.ac887726.pdf\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport profilePic from '../../assets/img/profilePic.jpg';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Navbar\">\r\n                <span className=\"title\">BITS<span style={{ fontWeight: '500' }}> SRCD</span></span>\r\n                <img src={this.props.profilePic} className=\"profilePic\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePic: state.profilePic\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Sidebar.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Sidebar extends React.Component {\r\n    render() {\r\n        let jsx;\r\n        if (this.props.admin) {\r\n            jsx = <li className=\"menuItem\"><NavLink to=\"/BITS-SRCD/deck/admin\" activeClassName=\"active\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i>Admin</NavLink></li>;\r\n        } else {\r\n            jsx = (\r\n                <>\r\n                    <li className=\"menuItem\"><NavLink exact to=\"/BITS-SRCD/deck\" activeClassName=\"active\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>Dashboard</NavLink></li>\r\n                    <li className=\"menuItem\"><NavLink to=\"/BITS-SRCD/deck/form\" activeClassName=\"active\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i>New Submission</NavLink></li>\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"Sidebar\">\r\n                <ul className=\"menuList\">\r\n                    {jsx}\r\n                    {/* <li className=\"menuItem\"><NavLink to=\"/chatbot\" activeClassName=\"active\"><i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>Chatbot</NavLink></li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","import React from 'react';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport './Uploader.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass Uploader extends React.Component {\r\n    getUploadParams = () => {\r\n        return { url: 'https://httpbin.org/post' }\r\n    }\r\n\r\n    handleChangeStatus = (f, status) => {\r\n        console.log(status, f, f.meta)\r\n        if (status == 'done') {\r\n            this.props.uploadFile(this.props.fileType, { ...f })\r\n        } else if (status == \"removed\") {\r\n            this.props.deleteFile(this.props.fileType, { ...f })\r\n        }\r\n    }\r\n\r\n    submitFile = async (files) => {\r\n        const filesData = new FormData();\r\n        filesData.append('title', this.props.formDetails.paperTitle);\r\n        files.map((file) => {\r\n            filesData.append('docs', file);\r\n        })\r\n        let result = await axios({\r\n            method: \"POST\",\r\n            url: \"https://srcd-temp.herokuapp.com/submit\",\r\n            data: filesData,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    handleSubmit = async (files, allFiles) => {\r\n        console.log(files.map(f => f.meta.name));\r\n        let newFiles = files.map((file) => {\r\n            return file.file;\r\n        })\r\n        let result = await this.submitFile(newFiles);\r\n        let url = 'https://srcd-temp.herokuapp.com/check/' + result.id + '/0';\r\n        this.props.addFiles(url);\r\n        allFiles.forEach(f => f.remove());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropzone\r\n                onChangeStatus={this.handleChangeStatus}\r\n                styles={{\r\n                    dropzone: {\r\n                        width: '70%',\r\n                        height: '95%',\r\n                        borderRadius: '2%',\r\n                        // overflow: 'hidden',\r\n                        backgroundColor: 'white',\r\n                        borderRadius: '2%',\r\n                        margin: 0,\r\n                        marginTop: '2%',\r\n                    },\r\n                    submitButton: {\r\n                        display: 'none'\r\n                    }\r\n                }}\r\n                inputContent=\"Upload or Drag Documents\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFiles: (url) => {\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                url: url\r\n            })\r\n        },\r\n        uploadFile: (fileType, file) => {\r\n            dispatch({\r\n                type: 'UPLOAD_FILE',\r\n                fileType: fileType,\r\n                file: file\r\n            })\r\n        },\r\n        deleteFile: (fileType, file) => {\r\n            dispatch({\r\n                type: 'DELETE_FILE',\r\n                fileType: fileType,\r\n                file: file\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploader);","import React from 'react';\r\nimport './Loader.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Loader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.showPreview(this.props.value);\r\n    }\r\n    render() {\r\n        let statusJSX;\r\n        if (this.props.value == false) {\r\n            statusJSX = <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n                <div class=\"loader\"></div>\r\n            </div>;\r\n        } else if (this.props.value == '-') {\r\n            statusJSX = '-';\r\n        } else {\r\n            statusJSX = <div>\r\n                <a href=\"#\" onClick={this.handleClick}>(View)</a>\r\n            </div>;\r\n        }\r\n        return (\r\n            statusJSX\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showPreview: (url) => {\r\n            dispatch({\r\n                type: 'SHOW_PREVIEW',\r\n                url: url\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Loader);","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\n// import \"react-table/react-table.css\";\r\nimport \"./ProcessedTable.css\";\r\nimport Loader from './Loader/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Styles = styled.div`\r\n  ${'' /* padding: 1rem; */}\r\n  table {\r\n    border-spacing: 0;\r\n    ${'' /* border: 1px solid black; */}\r\n    width:97%;\r\n    background-color:white;\r\n    border-radius:1%;\r\n    margin:auto;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      ${'' /* border-bottom: 1px solid black;\r\n      border-right: 1px solid black; */}\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow } = useTable(\r\n            {\r\n                columns,\r\n                data\r\n            },\r\n            useSortBy\r\n        )\r\n\r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                // Add the sorting props to control sorting. For this example\r\n                                // we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator */}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ProcessedTable(props) {\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Submitted Papers',\r\n                columns: [\r\n                    {\r\n                        Header: 'S No.',\r\n                        accessor: 'sno'\r\n                    },\r\n                    {\r\n                        Header: 'Title',\r\n                        accessor: 'title',\r\n                    },\r\n                    {\r\n                        Header: 'View',\r\n                        accessor: 'url',\r\n                        Cell: props => <Loader {...props} />\r\n                    },\r\n                    {\r\n                        Header: 'Status',\r\n                        accessor: 'status'\r\n                    },\r\n                    {\r\n                        Header: 'Date',\r\n                        accessor: 'date',\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    return (\r\n        <Styles>\r\n            <Table columns={columns} data={\r\n                props.files.length == 0 ?\r\n                    [{ sno: '-', status: '-', title: '-', url: '-', date: '-' }] :\r\n                    props.files} />\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        files: state.uploadedFiles,\r\n        length: state.uploadedFiles.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProcessedTable);","import React from 'react';\r\nimport { Worker } from '@phuocng/react-pdf-viewer';\r\n// Import the main component\r\nimport Viewer from '@phuocng/react-pdf-viewer';\r\n// Import the CSS\r\nimport '@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css';\r\n\r\nclass PDFViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.4.456/build/pdf.worker.min.js\">\r\n                <Viewer fileUrl={this.props.url} />\r\n            </Worker>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PDFViewer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ProcessedViewer.css';\r\nimport PDFViewer from './PDFViewer/PDFViewer';\r\nimport x from './Sample1.pdf'\r\n\r\nclass ProcessedViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"ProcessedViewer\">\r\n                    <div className=\"preview\" style={{ backgroundImage: `url(${this.props.preview.url})` }}>\r\n                        <PDFViewer url={this.props.preview.url} />\r\n                    </div>\r\n                    <div className=\"fa-stack fa-4x crossButton\" onClick={this.props.closePreview}>\r\n                        <i class=\"fa fa-circle fa-stack-2x icon-background\"></i>\r\n                        <i class=\"fa fa-times fa-stack-1x\" style={{ color: 'white' }}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        preview: state.preview\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closePreview: () => {\r\n            dispatch({\r\n                type: 'CLOSE_PREVIEW'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessedViewer);","import React from 'react';\r\nimport './Query.css';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass Query extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columnDefs: [{\r\n                headerName: \"Principle Invest.\", field: \"author\", sortable: true, filter: true\r\n            }, {\r\n                headerName: \"Proposal\", field: \"proposal\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Comments 1\", field: \"commentsOne\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Comments 2\", field: \"commentsTwo\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Endorsements\", field: \"endorsments\",\r\n                cellRenderer: function (params) {\r\n                    return `<a href=\"${params.value}\" target=\"_blank\">` + 'link' + `</a>`\r\n                }\r\n            }, {\r\n                headerName: \"Status\", field: \"status\", sortable: true, filter: true\r\n            }],\r\n            rowData: []\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        let allUploads = await axios.get('https://srcd-temp.herokuapp.com/admin/all');\r\n        let counter = 0\r\n        let allUploadsProcessed = allUploads.data.map((upload) => {\r\n            counter += 1\r\n            return {\r\n                sno: counter,\r\n                title: upload.title,\r\n                status: upload.status == true ? '✅Processed' : 'Waiting',\r\n                author: upload.prinInvest,\r\n                proposal: 'https://srcd-temp.herokuapp.com/sub/' + upload._id + '/0',\r\n                commentsOne: 'https://srcd-temp.herokuapp.com/sub/' + upload._id + '/1',\r\n                commentsTwo: 'https://srcd-temp.herokuapp.com/sub/' + upload._id + '/2',\r\n                endorsments: 'https://srcd-temp.herokuapp.com/sub/' + upload._id + '/3',\r\n                date: new Date().toLocaleDateString()\r\n            }\r\n        })\r\n        // let allUploadsProcessed = [\r\n        //     {\r\n        //         author: 'X',\r\n        //         proposal: 'www.google.com',\r\n        //         comments: 'www.google.com',\r\n        //         endorsments: 'www.google.com',\r\n        //         status: 'Pending'\r\n        //     },\r\n        //     {\r\n        //         author: 'Y',\r\n        //         proposal: 'www.google.com',\r\n        //         comments: 'www.google.com',\r\n        //         endorsments: 'www.google.com',\r\n        //         status: 'Pending'\r\n        //     },\r\n        //     {\r\n        //         author: 'Y',\r\n        //         proposal: 'www.google.com',\r\n        //         comments: 'www.google.com',\r\n        //         endorsments: 'www.google.com',\r\n        //         status: 'Pending'\r\n        //     },\r\n        //     {\r\n        //         author: 'X',\r\n        //         proposal: 'www.google.com',\r\n        //         comments: 'www.google.com',\r\n        //         endorsments: 'www.google.com',\r\n        //         status: 'Pending'\r\n        //     },\r\n        // ]\r\n        this.setState({\r\n            rowData: allUploadsProcessed\r\n        })\r\n        this.refs.agGrid.api.sizeColumnsToFit()\r\n    }\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    height: '90%',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    ref=\"agGrid\"\r\n                    columnDefs={this.state.columnDefs}\r\n                    rowData={this.state.rowData}>\r\n                </AgGridReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userID: state.userID\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Query);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass FormNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fields\">\r\n                <span className=\"heading\">Application</span>\r\n                <div className=\"pages\">\r\n                    <NavLink exact to=\"/BITS-SRCD/deck/form/\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Basic Details\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/BITS-SRCD/deck/form/paper-details\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Scheme\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/BITS-SRCD/deck/form/uploads\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Uploads\r\n                    </NavLink>\r\n                    {/* <NavLink exact to=\"/xyz\" className=\"pageLabel\" activeClassName=\"active\">\r\n                        Page 4\r\n                    </NavLink> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormNav;","import React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass BasicDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderValue = (value) => {\r\n        return value;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Full Name\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Full Name\"\r\n                            value={this.props.userName}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                        />\r\n                        <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Email\"\r\n                            value={this.props.userEmail}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                        />\r\n                        {/* <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Phone Number\"\r\n                            onChange={(e) => { this.props.editDetails('phoneNumber', e) }}\r\n                        /> */}\r\n                        <FormControl className=\"formControl\">\r\n                            <InputLabel id=\"demo-simple-select-label\">Choose your funding call</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                className=\"customSelect\"\r\n                                value={this.props.fundingCall.selected}\r\n                                renderValue={() => this.renderValue(this.props.fundingCall.selected)}\r\n                                onChange={this.props.selectFundingCall}\r\n                            >\r\n                                {this.props.fundingCall.options.map(\r\n                                    (option, index) => <MenuItem value={index}>{option}</MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                        {this.props.fundingCall.selected.includes('Other') && <TextField\r\n                            id=\"filled-read-only-input\"\r\n                            label=\"Please Specify\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Email\"\r\n                            value={this.props.fundingCall.others}\r\n                            onChange={this.props.changeOthers}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/BITS-SRCD/deck/form/paper-details\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userName: state.userName,\r\n        userEmail: state.userEmail,\r\n        formDetails: state.formDetails,\r\n        fundingCall: state.fundingCall,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editDetails: (field, e) => {\r\n            let obj = {};\r\n            obj.type = \"FORM_DETAILS_CHANGE\";\r\n            obj[field] = e.target.value;\r\n            dispatch(obj);\r\n        },\r\n        selectFundingCall: (e) => {\r\n            dispatch({\r\n                type: 'SELECT_FUNDING_CALL',\r\n                selectedIndex: e.target.value\r\n            })\r\n        },\r\n        changeOthers: (e) => {\r\n            dispatch({\r\n                type: 'FUNDING_CALL_OTHERS',\r\n                others: e.target.value\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicDetails);","import 'date-fns';\r\nimport React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Uploader from '../Uploader/Uploader';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nclass PaperDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Title of Proposal\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Title\"\r\n                            value={this.props.formDetails.paperTitle}\r\n                            onChange={(e) => { this.props.editDetails('paperTitle', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Principle Investigator\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Principle Investigator\"\r\n                            value={this.props.formDetails.paperAuthors}\r\n                            onChange={(e) => { this.props.editDetails('paperAuthors', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Designation\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Designation\"\r\n                            value={this.props.formDetails.designation}\r\n                            onChange={(e) => { this.props.editDetails('designation', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Department\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Department\"\r\n                            value={this.props.formDetails.department}\r\n                            onChange={(e) => { this.props.editDetails('department', e) }}\r\n                        />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Institute\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Institute\"\r\n                            value={this.props.formDetails.institute}\r\n                            onChange={(e) => { this.props.editDetails('institute', e) }}\r\n                        />\r\n                        <span className=\"info\">Co Investigators (Optional)</span>\r\n                        {this.props.coInvestigators.map((row, index) => {\r\n                            return (\r\n                                <div key={index} className=\"coInvestigatorsRow\">\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Name\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Name\"\r\n                                        value={row.name}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'name') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Designation\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Designation\"\r\n                                        value={row.designation}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'designation') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Department\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Department\"\r\n                                        value={row.department}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'department') }}\r\n                                    />\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Institute\"\r\n                                        variant=\"outlined\"\r\n                                        className=\"inputField\"\r\n                                        placeholder=\"Institute\"\r\n                                        value={row.institute}\r\n                                        onChange={(e) => { this.props.coInvestDetailsChange(e, index, 'institute') }}\r\n                                    />\r\n                                    <div>\r\n                                        <i onClick={() => { this.props.addCoInvest(index) }} className=\"fa fa-plus icons\" aria-hidden=\"true\"></i>\r\n                                        <i onClick={() => { this.props.deleteCoInvest(index) }} className=\"fa fa-trash icons\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"flex-start\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    className=\"customInput\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Last Date of Submission as mentioned by agency\"\r\n                                    value={this.props.formDetails.lastDate}\r\n                                    onChange={(e) => { this.props.editDetails('lastDate', e) }}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                        {/* <Uploader /> */}\r\n                    </div>\r\n                    {/* <div className=\"lastRow\">\r\n                        <div className={\r\n                            this.props.formDetails.filePipeline.length == 0 ? 'nextButtonDisabled' : 'nextButton'\r\n                        }>\r\n                            Submit\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/BITS-SRCD/deck/form/uploads\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails,\r\n        coInvestigators: state.coInvestigators\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editDetails: (field, e) => {\r\n            let obj = {};\r\n            obj.type = \"FORM_DETAILS_CHANGE\";\r\n            if (field == 'lastDate') {\r\n                obj[field] = e;\r\n                console.log(e);\r\n            } else {\r\n                obj[field] = e.target.value;\r\n            }\r\n            dispatch(obj);\r\n        },\r\n        coInvestNameChange: (e, index) => {\r\n            dispatch({\r\n                type: \"CO_INVEST_NAME_CHANGE\",\r\n                name: e.target.value,\r\n                index: index\r\n            })\r\n        },\r\n        coInvestAffliationChange: (e, index) => {\r\n            dispatch({\r\n                type: \"CO_INVEST_AFFLIATION_CHANGE\",\r\n                affliation: e.target.value,\r\n                index: index\r\n            })\r\n        },\r\n        coInvestDetailsChange: (e, index, key) => {\r\n            let obj = {}\r\n            obj.type = \"CO_INVEST_DETAILS_CHANGE\";\r\n            obj[key] = e.target.value;\r\n            obj.index = index\r\n            dispatch(obj)\r\n        },\r\n        addCoInvest: (index) => {\r\n            dispatch({\r\n                type: \"ADD_CO_INVEST\",\r\n                index: index\r\n            })\r\n        },\r\n        deleteCoInvest: (index) => {\r\n            dispatch({\r\n                type: \"DELETE_CO_INVEST\",\r\n                index: index\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaperDetails);","import React from 'react';\r\nimport './FormSubmit.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormNav from './FormNav';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Uploader from '../Uploader/Uploader';\r\nimport axios from 'axios';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nclass Uploads extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    submitFile = async () => {\r\n        const filesData = new FormData();\r\n        filesData.append('email', this.props.userEmail);\r\n        filesData.append('title', this.props.formDetails.paperTitle);\r\n        filesData.append('designation', this.props.formDetails.designation);\r\n        filesData.append('department', this.props.formDetails.department);\r\n        filesData.append('institute', this.props.formDetails.institute);\r\n        filesData.append('reviewerOneName', this.props.formDetails.reviewerOneName);\r\n        filesData.append('reviewerTwoName', this.props.formDetails.reviewerTwoName);\r\n        let allFilesProposal = this.props.formDetails.filePipeline.proposal[0].file;\r\n        let allFilesCommentsOne = this.props.formDetails.filePipeline.commentsOne[0].file;\r\n        let allFilesCommentsTwo = this.props.formDetails.filePipeline.commentsTwo[0].file;\r\n        let allFilesEndor = this.props.formDetails.filePipeline.edorsements[0].file;\r\n        // files.map((file) => {\r\n        //     filesData.append('docs', file);\r\n        // })\r\n        filesData.append('projProp', allFilesProposal);\r\n        filesData.append('endoCert', allFilesEndor);\r\n        filesData.append('revCommentsOne', allFilesCommentsOne);\r\n        filesData.append('revCommentsTwo', allFilesCommentsTwo);\r\n        filesData.append('prinInvest', this.props.formDetails.paperAuthors)\r\n        filesData.append('funding', this.props.fundingCall.selected)\r\n        let result\r\n        try {\r\n            result = await axios({\r\n                method: \"POST\",\r\n                url: \"https://srcd-temp.herokuapp.com/sub/submit\",\r\n                data: filesData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        // let allFiles = this.props.formDetails.filePipeline.proposal;\r\n        // allFiles.concat(this.props.formDetails.filePipeline.comments);\r\n        // allFiles.concat(this.props.formDetails.filePipeline.edorsements);\r\n        // let newFiles = allFiles.map((file) => {\r\n        //     return file.file;\r\n        // })\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        let result = await this.submitFile();\r\n        console.log(result)\r\n        let url = 'https://srcd-temp.herokuapp.com/sub/' + result.id + '/0';\r\n        this.props.addFiles(url);\r\n        this.setState({\r\n            loading: false\r\n        })\r\n        // allFiles.forEach(f => f.remove());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"formWrapper\">\r\n                <LoadingOverlay\r\n                    active={this.state.loading}\r\n                    spinner\r\n                    text='Submitting...'\r\n                    styles={{\r\n                        position: 'fixed',\r\n                        background: 'rgba(0, 0, 0, 0.5)',\r\n                        width: '100%',\r\n                        height: '100%'\r\n                    }}\r\n                >\r\n                </LoadingOverlay>\r\n                <FormNav />\r\n                <div className=\"formDetails\">\r\n                    <div className=\"inputFields\">\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Project Proposal Summary (incl Budget)</span>\r\n                        <Uploader fileType=\"proposal\" />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Reviewer 1\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Name of Reviewer 1\"\r\n                            value={this.props.formDetails.reviewerOneName}\r\n                            onChange={(e) => { this.props.reviewerNameChange(1, e) }}\r\n                        />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Reviewer 1 Comments</span>\r\n                        <Uploader fileType=\"commentsOne\" />\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label=\"Name of Reviewer 2\"\r\n                            variant=\"outlined\"\r\n                            className=\"customInput\"\r\n                            placeholder=\"Name of Reviewer 2\"\r\n                            value={this.props.formDetails.reviewerTwoName}\r\n                            onChange={(e) => { this.props.reviewerNameChange(2, e) }}\r\n                        />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Reviewer 2 Comments</span>\r\n                        <Uploader fileType=\"commentsTwo\" />\r\n                        <span style={{ fontSize: '1.2rem' }} className=\"info\">Endorsement Certificates</span>\r\n                        <Uploader fileType=\"edorsements\" />\r\n                    </div>\r\n                    <div className=\"lastRow\">\r\n                        <div onClick={this.handleSubmit} className=\"nextButton\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"lastRow\">\r\n                        <NavLink exact to=\"/BITS-SRCD/deck/form/paper-details\" className=\"nextButton\">\r\n                            Next\r\n                        </NavLink>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formDetails: state.formDetails,\r\n        email: state.userEmail,\r\n        coInvestigators: state.coInvestigators,\r\n        fundingCall: state.fundingCall,\r\n        userEmail: state.userEmail\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addFiles: (url) => {\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                url: url\r\n            })\r\n        },\r\n        reviewerNameChange: (number, e) => {\r\n            dispatch({\r\n                type: 'REVIEWER_NAME_CHANGE',\r\n                number: number,\r\n                name: e.target.value\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Uploads);","import React, { useEffect } from 'react';\r\nimport './Chatbot.css';\r\nimport styled from 'styled-components';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n  table {\r\n    border-spacing: 0;\r\n    ${'' /* border: 1px solid black; */}\r\n    width:97%;\r\n    background-color:white;\r\n    border-radius:1%;\r\n    margin:auto;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      width:25%;\r\n      padding: 0.5rem;\r\n      ${'' /* border-bottom: 1px solid black;\r\n      border-right: 1px solid black; */}\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow } = useTable(\r\n            {\r\n                columns,\r\n                data\r\n            },\r\n            useSortBy\r\n        )\r\n\r\n    // We don't want to render all 2000 rows for this example, so cap\r\n    // it at 20 for this use case\r\n    const firstPageRows = rows;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                // Add the sorting props to control sorting. For this example\r\n                                // we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator */}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {firstPageRows.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ChatbotTable(props) {\r\n    useEffect(() => {\r\n        async function temp() {\r\n            let result = await axios.post('http://localhost:8000/api/getSupportMessages');\r\n            props.setSupport(result.data);\r\n        }\r\n        temp();\r\n    }, [])\r\n\r\n    const replyClick = () => {\r\n        Swal.fire({\r\n            title: 'Enter the message you wish to send!',\r\n            input: 'textarea',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Send',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (text) => {\r\n                return axios.post('http://localhost:8000/api/sendMessageTo', {\r\n                    message: text,\r\n                    to: '+919381872407'\r\n                }).then(result => {\r\n                    return result.data;\r\n                }).catch(error => {\r\n                    Swal.showValidationMessage(\r\n                        `Request failed: ${error}`\r\n                    )\r\n                })\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n            console.log(result);\r\n            if (result.value) {\r\n                Swal.fire(\r\n                    'Message Sent!',\r\n                    'Your message has been sent!',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Invoices Asking For Support',\r\n                columns: [\r\n                    {\r\n                        Header: 'Phone Number',\r\n                        accessor: 'phoneNumber',\r\n                        Cell: (props) => {\r\n                            console.log(props.value)\r\n                            return <span>{props.value == undefined ? '-' : props.value}</span>\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'Invoice',\r\n                        accessor: 'lastFile',\r\n                        Cell: (params) => (\r\n                            <a href='#' style={{ cursor: 'pointer', textDecoration: 'none' }}\r\n                                onClick={() => { props.displaySupport(params.value) }}>\r\n                                {params.value == undefined ? '-' : 'View'}\r\n                            </a>\r\n                        )\r\n                    },\r\n                    {\r\n                        Header: 'Reply',\r\n                        accessor: '',\r\n                        Cell: (props) => {\r\n                            if (props.row.original.phoneNumber) {\r\n                                return <a style={{ textDecoration: 'none' }} href='#' onClick={replyClick}>Reply</a>;\r\n                            } else {\r\n                                return <a style={{ textDecoration: 'none' }} href='#' onClick={replyClick}>-</a>;\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        Header: 'Date',\r\n                        accessor: 'updatedAt',\r\n                        Cell: (props) => {\r\n                            return <span>{props.value == undefined ? '-' : new Date(props.value).toLocaleDateString()}</span>\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    return (\r\n        <Styles>\r\n            <Table columns={columns} data={\r\n                props.support.length == 0 ?\r\n                    [{ filename: '-', status: '-', fraud: '-', date: '-', download: '-' }] :\r\n                    props.support} />\r\n        </Styles>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSupport: (supportArray) => {\r\n            dispatch({\r\n                type: 'SET_SUPPORT',\r\n                supportArray: supportArray\r\n            })\r\n        },\r\n        displaySupport: (url) => {\r\n            dispatch({\r\n                type: 'DISPLAY_SUPPORT',\r\n                url: url\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        support: state.support,\r\n        length: state.support.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatbotTable);","import React from 'react';\r\nimport { Worker } from '@phuocng/react-pdf-viewer';\r\n// Import the main component\r\nimport Viewer from '@phuocng/react-pdf-viewer';\r\n// Import the CSS\r\nimport '@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css';\r\nimport './InvoiceViewer.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass InvoiceViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"InvoiceViewer\">\r\n                    <div className=\"fa-stack fa-4x crossButton\" onClick={this.props.hideSupport}>\r\n                        <i class=\"fa fa-circle fa-stack-2x icon-background\" style={{ color: '#3b55e6' }}></i>\r\n                        <i class=\"fa fa-times fa-stack-1x\" style={{ color: 'white' }}></i>\r\n                    </div>\r\n                    <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.4.456/build/pdf.worker.min.js\">\r\n                        <Viewer fileUrl={this.props.supportDisplay.url} />\r\n                    </Worker>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        supportDisplay: state.supportDisplay\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        hideSupport: () => {\r\n            dispatch({\r\n                type: 'HIDE_SUPPORT'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InvoiceViewer);","import React from 'react';\r\nimport './Deck.css';\r\nimport Uploader from './Uploader/Uploader';\r\nimport ProcessedTable from './ProcessedTable/ProcessedTable';\r\nimport ProcessedViewer from './ProcessedViewer/ProcessedViewer';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Query from './Query/Query';\r\nimport BasicDetails from './FormSubmit/BasicDetails';\r\nimport PaperDetails from './FormSubmit/PaperDetails';\r\nimport Uploads from './FormSubmit/Uploads';\r\nimport Chatbot from './Chatbot/ChatbotTable';\r\nimport InvoiceViewer from './Chatbot/InvoiceViewer/InvoiceViewer';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Deck extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Deck\">\r\n                <Switch>\r\n                    <Route exact path=\"/BITS-SRCD/deck\">\r\n                        <div className=\"headerRow\">\r\n                            {/* <InvoicesProcessedCard />\r\n                            <UploadCard />\r\n                            <DownloadCard /> */}\r\n                        </div>\r\n                        {this.props.uploaderOpen == true && <Uploader />}\r\n                        {this.props.previewShow == true && <ProcessedViewer />}\r\n                        {/* <ProcessedViewer /> */}\r\n                        <ProcessedTable />\r\n                    </Route>\r\n                    <Route path=\"/BITS-SRCD/deck/admin\">\r\n                        <Query />\r\n                    </Route>\r\n                    <Route path=\"/BITS-SRCD/deck/form/paper-details\">\r\n                        <PaperDetails />\r\n                    </Route>\r\n                    <Route path=\"/BITS-SRCD/deck/form/uploads\">\r\n                        <Uploads />\r\n                    </Route>\r\n                    <Route path=\"/BITS-SRCD/deck/form\">\r\n                        <BasicDetails />\r\n                    </Route>\r\n                    <Route path=\"/BITS-SRCD/deck/chatbot\">\r\n                        <Chatbot />\r\n                        {this.props.supportDisplay.display == true && <InvoiceViewer />}\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        uploaderOpen: state.uploaderOpen,\r\n        previewShow: state.preview.show,\r\n        supportDisplay: state.supportDisplay,\r\n        admin: state.admin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adminInit: (files) => {\r\n            dispatch({\r\n                type: 'ADMIN_INIT',\r\n                files: files\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Deck);","import React from 'react';\r\nimport './Login.css';\r\nimport bitsLogo from '../../assets/img/bits-logo.png';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends React.Component {\r\n    googleLoginSuccess = async (response) => {\r\n        // let result = await axios.post('https://amazonaffliate.tk/backend/api/getOrCreateUser', response);\r\n        // this.props.login(result.data.coins, response.profileObj.googleId);\r\n        let result;\r\n        console.log(response.profileObj.email)\r\n        try {\r\n            result = await axios.post('https://srcd-temp.herokuapp.com/user/me', {\r\n                email: response.profileObj.email\r\n            })\r\n            result = result.data;\r\n        } catch (err) {\r\n            await axios.post('https://srcd-temp.herokuapp.com/user/new', {\r\n                email: response.profileObj.email,\r\n                name: response.profileObj.name\r\n            })\r\n            result = []\r\n        }\r\n        console.log(response);\r\n        console.log(result);\r\n        let admin = false;\r\n        if (response.profileObj.email == 'bitssrcd@gmail.com') {\r\n            admin = true;\r\n        }\r\n        this.props.login(response.profileObj.email, result, response.profileObj.imageUrl, admin);\r\n        if (admin) {\r\n            this.props.history.push(\"/BITS-SRCD/deck/admin\");\r\n        } else {\r\n            this.props.history.push(\"/BITS-SRCD/deck\");\r\n        }\r\n    }\r\n\r\n    googleLoginFailure = (response) => {\r\n        console.log(response);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <img className=\"image\" src={bitsLogo} />\r\n                <GoogleLogin\r\n                    clientId=\"31251792338-rnkbgfrnjoq3d6kshffdlmvp1j3ik904.apps.googleusercontent.com\"\r\n                    buttonText=\"Sign in with Google\"\r\n                    onSuccess={this.googleLoginSuccess}\r\n                    onFailure={this.googleLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    isSignedIn={false}\r\n                    className=\"googleLogin\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, projects, image, admin) => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                email: email,\r\n                projects: projects,\r\n                image: image,\r\n                admin: admin\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Login);","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends React.Component {\r\n    render() {\r\n        const { component: Component, ...props } = this.props\r\n        console.log('CHECKING AUTH');\r\n        console.log(this.props.email);\r\n        return (\r\n            <Route\r\n                {...props}\r\n                render={props => (\r\n                    this.props.email ?\r\n                        <Component {...props} /> :\r\n                        <Redirect to='/BITS-SRCD/' />\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.userEmail\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);","import Navbar from '../Navbar/Navbar';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Deck from '../Deck/Deck';\r\nimport React from 'react'\r\n\r\nclass AppWrapper extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <div className=\"DeckWrapper\">\r\n                    <Sidebar />\r\n                    <Deck />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppWrapper;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Deck from './components/Deck/Deck';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\nimport axios from 'axios';\nimport AppWrapper from './components/AppWrapper/AppWrapper'\n\n\nclass App extends React.Component {\n  render() {\n    // let jsx = (\n    //   <>\n    //     <Navbar />\n    //     <div className=\"DeckWrapper\">\n    //       <Sidebar />\n    //       <Deck />\n    //     </div>\n    //   </>\n    // )\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/BITS-SRCD/\" component={Login} />\n            <ProtectedRoute path=\"/BITS-SRCD/deck\" component={AppWrapper} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { produce, original } from \"immer\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst initState = {\r\n    userName: 'Apoorv Sadana',\r\n    admin: false,\r\n    userEmail: false,\r\n    profilePic: '',\r\n    uploaderOpen: false,\r\n    invoicesProcessed: 0,\r\n    userID: '0fcc0cae-1870-4307-b949-7ed90788b878',\r\n    files: [\r\n        {\r\n            sno: 1,\r\n            title: 'XYZ',\r\n            status: '✅Processed',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 2,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 3,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 4,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n        {\r\n            sno: 5,\r\n            title: 'ABC',\r\n            status: 'Waiting',\r\n            date: new Date().toLocaleDateString()\r\n        },\r\n    ],\r\n    preview: {\r\n        url: null,\r\n        show: false\r\n    },\r\n    support: [],\r\n    supportDisplay: {\r\n        display: false,\r\n        url: null\r\n    },\r\n    formDetails: {\r\n        fullName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        paperTitle: '',\r\n        filePipeline: {\r\n            proposal: [],\r\n            commentsOne: [],\r\n            commentsTwo: [],\r\n            edorsements: []\r\n        },\r\n        paperAuthors: '',\r\n        designation: '',\r\n        department: '',\r\n        institute: '',\r\n        lastDate: new Date(),\r\n        reviewerOneName: '',\r\n        reviewerTwoName: ''\r\n    },\r\n    uploadedFiles: [\r\n    ],\r\n    fundingCall: {\r\n        options: [\r\n            \"Department of Science and Technology-DST\",\r\n            \"Science and Engineering Research Board (SERB)-Extramural Research (EMR) funding scheme\",\r\n            \"Department of Biotechnology\",\r\n            \"Biotechnology Industry Research Assistance Council (BIRAC)\",\r\n            \"Board of Research in Nuclear Science(BRNS) - Research Grants\",\r\n            \"Indian Space and Research Organization (ISRO)-RESPOND\",\r\n            \"Indian Council of Social Science Research (ICSSR)-Ministry of Education\",\r\n            \"Indian Council of Medical Research (ICMR)\",\r\n            \"National Council of Education Research & Training (NCERT)-ERIC\",\r\n            \"Council of Scientific and Industrial Research (CSIR)\",\r\n            \"Defence Research and Development Organization (DRDO) –Extramural Research Grant\",\r\n            \"Shastri Institutional Collaborative Research Grant (SICRG)\",\r\n            \"Department of Science and Technology-DST-Rajasthan\",\r\n            \"Ministry of Education- IMPacting Research INnovation and Technology (IMPRINT – INDIA)\",\r\n            \"Other (specify)\"\r\n        ],\r\n        selected: \"\",\r\n        others: \"\"\r\n    },\r\n    coInvestigators: [{\r\n        name: '',\r\n        designation: '',\r\n        department: '',\r\n        institute: ''\r\n    }]\r\n}\r\n\r\nvar files;\r\nvar newFiles;\r\nvar currCo;\r\nvar currArr;\r\n\r\nconst rootReducer = produce((draft, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            draft.userEmail = action.email;\r\n            let arr2 = original(draft).uploadedFiles;\r\n            draft.profilePic = action.image;\r\n            draft.admin = action.admin;\r\n            let counter = arr2.length;\r\n            draft.uploadedFiles = action.projects.map((project) => {\r\n                counter = counter + 1;\r\n                return {\r\n                    sno: counter,\r\n                    title: project.title,\r\n                    status: 'Waiting',\r\n                    url: 'https://srcd-temp.herokuapp.com/sub/' + project._id + '/0',\r\n                    date: new Date().toLocaleDateString()\r\n                }\r\n            })\r\n            break;\r\n        case \"TOGGLE_UPLOADER\":\r\n            draft.uploaderOpen = action.toggle;\r\n            break;\r\n        case \"ADD_FILE\":\r\n            files = original(draft).files;\r\n            console.log(files);\r\n            newFiles = [{\r\n                id: action.fileID,\r\n                filename: action.file.meta.name,\r\n                status: false,\r\n                fraud: '-',\r\n                date: new Date().toLocaleDateString(),\r\n                download: null\r\n            }, ...files];\r\n            draft.files = newFiles;\r\n            break;\r\n        case \"UPDATE_FILE\":\r\n            let fileID = action.fileData.fileID;\r\n            let fraud = action.fileData.fraud;\r\n            let url = action.fileData.link;\r\n            let processedDetails = action.fileData.processedDetails;\r\n            files = original(draft).files;\r\n            files.map((file, index) => {\r\n                if (file.id == fileID) {\r\n                    draft.files[index].fraud = fraud;\r\n                    draft.files[index].download = url;\r\n                    draft.files[index].status = true;\r\n                    draft.files[index].processedDetails = processedDetails;\r\n                }\r\n            });\r\n            draft.invoicesProcessed = original(draft).invoicesProcessed + 1;\r\n            break;\r\n        case \"SHOW_PREVIEW\":\r\n            console.log(action.url)\r\n            draft.preview.show = true;\r\n            draft.preview.url = action.url;\r\n            break;\r\n        case \"CLOSE_PREVIEW\":\r\n            draft.preview.show = false;\r\n            draft.preview.url = null;\r\n            break;\r\n        case \"SET_SUPPORT\":\r\n            draft.support = action.supportArray;\r\n            break;\r\n        case \"DISPLAY_INVOICE\":\r\n            draft.support = action.supportArray;\r\n            break;\r\n        case \"DISPLAY_SUPPORT\":\r\n            draft.supportDisplay = {\r\n                display: true,\r\n                url: action.url\r\n            }\r\n            break;\r\n        case \"HIDE_SUPPORT\":\r\n            draft.supportDisplay = {\r\n                display: false,\r\n                url: null\r\n            }\r\n            break;\r\n        case \"FORM_DETAILS_CHANGE\":\r\n            if (action.fullName) {\r\n                draft.formDetails.fullName = action.fullName;\r\n            }\r\n            if (action.email) {\r\n                draft.formDetails.email = action.email;\r\n            }\r\n            if (action.phoneNumber) {\r\n                draft.formDetails.phoneNumber = action.phoneNumber;\r\n            }\r\n            if (action.paperTitle) {\r\n                draft.formDetails.paperTitle = action.paperTitle;\r\n            }\r\n            if (action.paperAuthors) {\r\n                draft.formDetails.paperAuthors = action.paperAuthors;\r\n            }\r\n            if (action.designation) {\r\n                draft.formDetails.designation = action.designation;\r\n            }\r\n            if (action.department) {\r\n                draft.formDetails.department = action.department;\r\n            }\r\n            if (action.institute) {\r\n                draft.formDetails.institute = action.institute;\r\n            }\r\n            if (action.lastDate) {\r\n                draft.formDetails.lastDate = action.lastDate;\r\n            }\r\n            break;\r\n        case \"ADD_FILES\":\r\n            let arr = draft.uploadedFiles;\r\n            arr.push({\r\n                sno: arr.length + 1,\r\n                title: original(draft).formDetails.paperTitle,\r\n                status: 'Waiting',\r\n                url: action.url,\r\n                date: new Date().toLocaleDateString()\r\n            })\r\n        case \"SELECT_FUNDING_CALL\":\r\n            draft.fundingCall.selected = original(draft).fundingCall.options[action.selectedIndex]\r\n            break\r\n        case \"CO_INVEST_NAME_CHANGE\":\r\n            draft.coInvestigators[action.index].name = action.name\r\n            break\r\n        case \"CO_INVEST_AFFLIATION_CHANGE\":\r\n            draft.coInvestigators[action.index].affliation = action.affliation\r\n            break\r\n        case \"ADD_CO_INVEST\":\r\n            currCo = original(draft).coInvestigators.slice();\r\n            console.log(currCo);\r\n            currCo.splice(action.index + 1, 0, {\r\n                name: '',\r\n                designation: '',\r\n                department: '',\r\n                institute: ''\r\n            })\r\n            draft.coInvestigators = currCo;\r\n            break\r\n        case \"DELETE_CO_INVEST\":\r\n            if (currCo.length == 1) {\r\n                draft.coInvestigators = [{\r\n                    name: '',\r\n                    affliation: ''\r\n                }];\r\n            } else {\r\n                currCo = original(draft).coInvestigators.slice();\r\n                currCo.splice(action.index, 1)\r\n                draft.coInvestigators = currCo;\r\n            }\r\n            break\r\n        case \"UPLOAD_FILE\":\r\n            currArr = original(draft).formDetails.filePipeline[action.fileType].slice()\r\n            currArr.push(action.file)\r\n            draft.formDetails.filePipeline[action.fileType] = currArr\r\n            break;\r\n        case \"DELETE_FILE\":\r\n            currArr = original(draft).formDetails.filePipeline[action.fileType].slice()\r\n            currArr = currArr.filter((file) => {\r\n                if (file.meta.name != action.file.meta.name) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            })\r\n            draft.formDetails.filePipeline[action.fileType] = currArr\r\n            break;\r\n        case \"FUNDING_CALL_OTHERS\":\r\n            draft.fundingCall.others = action.others\r\n            break\r\n        case \"CO_INVEST_DETAILS_CHANGE\":\r\n            if (action.name) {\r\n                draft.coInvestigators[action.index].name = action.name\r\n            }\r\n            if (action.designation) {\r\n                draft.coInvestigators[action.index].designation = action.designation\r\n            }\r\n            if (action.department) {\r\n                draft.coInvestigators[action.index].department = action.department\r\n            }\r\n            if (action.institute) {\r\n                draft.coInvestigators[action.index].institute = action.institute\r\n            }\r\n            break;\r\n        case \"REVIEWER_NAME_CHANGE\":\r\n            if (action.number == 1) {\r\n                draft.formDetails.reviewerOneName = action.name\r\n            } else if (action.number == 2) {\r\n                draft.formDetails.reviewerTwoName = action.name\r\n            }\r\n            break\r\n    }\r\n}, initState);\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}